{"version":3,"sources":["../../core/Simulation/simulation.worker.js","ui-components/Tour/images/bifurcation.gif","ui-components/Tour/images/context-menu.gif","ui-components/Tour/images/simulation.gif","ui-components/Tour/images/wire.gif","../../core/Diagram/states/common.js","../../core/Simulation/utils.js","../../core/Link/LinkModel.js","../../core/Port/PortModel.js","../../core/Simulation/serialize.js","../../core/Simulation/SimulationEngine.js","../../core/BaseModel.js","../../core/Component.jsx","../../core/Diagram/DroppableLayer.jsx","../../core/Diagram/Diagram.jsx","../../core/Link/LinkWidget.jsx","../../core/Link/LinkFactory.jsx","../../core/Port/PortFactory.js","../../core/Diagram/actions/ClipboardAction.js","../../core/Diagram/actions/DeleteAction.js","../../core/Diagram/actions/DuplicateAction.js","../../core/Diagram/actions/UndoRedoAction.js","../../core/Diagram/actions/ZoomAction.js","../../core/Diagram/Command/commandHandlers.js","../../core/Diagram/Command/Command.js","../../core/Diagram/Command/CommandManager.js","../../core/Diagram/states/handleLinkDrag.js","../../core/Diagram/states/BifurcateLinkState.js","../../core/Diagram/states/DragCanvasState.js","../../core/Diagram/states/DragNewLinkState.js","../../core/Diagram/states/MoveItemsState.js","../../core/Diagram/states/SelectionBoxState.js","../../core/Diagram/states/SelectingState.js","../../core/Diagram/states/States.js","../../core/Diagram/DiagramEngine.js","../../core/Port/Port.jsx","../../components/portExtendUtils.js","../../components/And/AndWidget.jsx","../../components/And/AndIcon.jsx","../../components/And/AndRegister.js","../../components/And/AndModel.js","../../components/Buffer/BufferWidget.jsx","../../components/Buffer/BufferIcon.jsx","../../components/Buffer/BufferRegister.js","../../components/Buffer/BufferModel.js","../../components/Button/ButtonWidget.jsx","../../components/Button/ButtonIcon.jsx","../../components/Button/ButtonRegister.js","../../components/Button/ButtonModel.js","../../components/Clock/ClockWidget.jsx","../../components/Clock/ClockIcon.jsx","../../components/Clock/ClockRegister.js","../../components/Clock/ClockModel.js","../../components/Nand/NandWidget.jsx","../../components/Nand/NandIcon.jsx","../../components/Nand/NandRegister.js","../../components/Nand/NandModel.js","../../components/Nor/NorWidget.jsx","../../components/Nor/NorIcon.jsx","../../components/Nor/NorRegister.js","../../components/Nor/NorModel.js","../../components/Not/NotWidget.jsx","../../components/Not/NotIcon.jsx","../../components/Not/NotRegister.js","../../components/Not/NotModel.js","../../components/Or/OrWidget.jsx","../../components/Or/OrIcon.jsx","../../components/Or/OrRegister.js","../../components/Or/OrModel.js","../../components/Xnor/XnorWidget.jsx","../../components/Xnor/XnorIcon.jsx","../../components/Xnor/XnorRegister.js","../../components/Xnor/XnorModel.js","../../components/Xor/XorWidget.jsx","../../components/Xor/XorIcon.jsx","../../components/index.js","../../components/Xor/XorRegister.js","../../components/Xor/XorModel.js","ui-components/Buttons/ComponentSelectButton.jsx","ui-components/Buttons/DiagramStateButtons.jsx","ui-components/Icons/ArrowLeft.jsx","ui-components/Icons/Chevron.jsx","ui-components/Icons/Close.jsx","ui-components/Icons/Copy.jsx","ui-components/Icons/Cut.jsx","ui-components/Icons/Delete.jsx","ui-components/Icons/Duplicate.jsx","ui-components/Icons/Paste.jsx","ui-components/Icons/Pause.jsx","ui-components/Icons/Play.jsx","ui-components/Icons/Redo.jsx","ui-components/Icons/Settings.jsx","ui-components/Icons/Stop.jsx","ui-components/Icons/Undo.jsx","ui-components/Icons/ZoomIn.jsx","ui-components/Icons/ZoomOut.jsx","ui-components/Buttons/SimulationControlButtons.jsx","ui-components/Modal/Modal.jsx","ui-components/Modal/ModalContentLayout.jsx","ui-components/ComponentSelect/ComponentConfigurationInput.jsx","ui-components/ComponentSelect/DraggableComponent.jsx","ui-components/ComponentSelect/ComponentConfiguration.jsx","ui-components/ComponentSelect/ComponentEdit.jsx","ui-components/ComponentSelect/ComponentGroup.jsx","ui-components/ComponentSelect/ComponentSearch.jsx","ui-components/ComponentSelect/ComponentSelect.jsx","ui-components/Key/Key.jsx","ui-components/ContextMenus/ContextMenuIconContainer.jsx","ui-components/ContextMenus/ContextMenuShortcutContainer.jsx","ui-components/ContextMenus/ComponentContextMenu.jsx","ui-components/ContextMenus/DiagramContextMenu.jsx","ui-components/ContextMenus/ContextMenus.jsx","ui-components/Help/HelpAbout.jsx","ui-components/Help/HelpKeyboardShortcuts.jsx","ui-components/Tour/tourCircuit.js","ui-components/Tour/Tour.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_public_path__","snap","position","gridSize","Point","Math","round","x","y","samePosition","p1","p2","sameX","points","map","p","every","i","arr","sameY","sameAxis","closestPointToLink","P","link","distance","A","B","hypot","closestPointOnSegment","Q","segment","v","u","t","closest","point","distanceToA","distanceToB","hasMiddlePoint","getFirstPosition","getLastPosition","firstSegment","getMiddlePosition","lastSegment","isPointOverSegment","max","min","isPointOverLink","getSecondPosition","isPointOverFirstLinkSegment","isPointOverSecondLinkSegment","getLandingLink","engine","getLastPoint","getPosition","Object","values","getModel","getLinkLayers","getLinks","find","target","getID","isValueValid","value","LinkModel","options","type","bifurcations","bifurcationSource","bifurcationTarget","label","LabelModel","newLabel","DefaultLabelModel","setLabel","this","getBifurcationSource","getBifurcationTarget","bifurcation","push","filter","b","result","forEach","getAllBifurcations","flat","Infinity","selected","setSelected","getSourcePort","getTargetPort","remove","removeBifurcation","event","registerModel","data","requestAnimationFrame","PointModel","then","addBifurcation","source","setBifurcationSource","setBifurcationTarget","repaintCanvas","pointModel","index","getPoints","length","getFirstPoint","getSecondPoint","getMiddlePoint","getSecondLastPoint","first","middle","last","isSelected","RDLinkModel","PortModel","maximumLinks","input","keys","getMaximumLinks","port","isNewLinkAllowed","links","getMainLink","getColor","RDPortModel","serializeComponents","components","component","id","getType","configurations","ports","name","getName","isInput","properties","instance","key","includes","reduce","obj","getPortInfo","componentId","getParent","getLinkId","serialize","diagram","models","Class","Model","methods","getOwnPropertyNames","prototype","methodName","toString","layers","getBifurcations","isBifurcation","worker","SimulationWorker","SimulationEngine","onSimulationMessage","diff","appendDiff","addEventListener","state","clearDiff","postMessage","command","undefined","Promise","resolve","waitForEnd","removeEventListener","getPort","BaseModel","initialize","arg","setAsInput","setAsOutput","addInputPort","isOutput","Error","addOutputPort","fromEntries","entries","getPorts","args","clone","setPosition","getX","getY","from","emitted","emit","NodeModel","Component","description","group","model","widget","icon","Widget","Icon","storeRef","initialConfig","AbstractReactFactory","DroppableLayer","styled","div","attrs","disabled","props","onDragOver","preventDefault","onDrop","JSON","parse","dataTransfer","getData","handleComponentDrop","FullscreenCanvas","CanvasWidget","Diagram","test","isLocked","getEngine","LinkWidget","refPaths","updateRenderedPaths","clearRenderedPaths","setRenderedPaths","ref","current","to","tuple","path","diagramEngine","factory","React","createRef","forwardRef","onSelection","loose","color","r","fill","stroke","strokeWidth","cx","cy","bifurcationOrigin","lastSourcePoint","renderPoint","bifurcationTargetPosition","some","data-default-link-test","getOptions","testName","generatePathPoints","renderSegment","generateLinePath","renderBifurcationSourcePoint","renderBifurcationTargetPoint","renderLooseLinkPoint","Path","LinkFactory","d","DefaultLinkFactory","PortFactory","AbstractModelFactory","ClipboardAction","areShortcutsAllowed","InputType","KEY_DOWN","fire","matchesInput","code","handleCut","handleCopy","handlePaste","ctrlKey","getSelectedComponents","getSelectedEntities","entity","copies","fireEvent","nodes","node","getAllLinks","localStorage","setItem","stringify","clipboard","getItem","clearSelection","serialized","modelInstance","getActiveNodeLayer","getChildModelFactoryBank","getFactory","generateModel","deserialize","addNode","Action","DeleteAction","handleAction","entities","nodesLinks","DuplicateAction","clones","UndoRedoAction","shiftKey","handleUndo","handleRedo","commands","undo","redo","ZOOM_LEVELS","ZoomAction","MOUSE_WHEEL","stopPropagation","getLayers","layer","allowRepaint","nextZoomLevelIndex","zoomDirection","sign","deltaY","currentZoomLevelIndex","indexOf","getZoomLevel","oldZoomFactor","setZoomLevel","zoomFactor","boundingRect","getCanvas","getBoundingClientRect","clientWidth","width","clientHeight","height","widthDiff","heightDiff","clientX","left","clientY","top","xFactor","getOffsetX","yFactor","getOffsetY","setOffset","commandHandlers","editComponentConfiguration","adjustLink","sourcePort","getNode","setSourcePort","addLink","targetPort","setTargetPort","componentsAdded","add","execute","componentEdited","after","before","linkAdded","linkChanged","handleLinkChanged","getLink","setPoints","oldTarget","entitiesRemoved","sort","l1","l2","entitiesMoved","handleEntitiesMoved","Command","CommandManager","clear","stack","nextLinkPosition","initialRelative","sourcePosition","zoomLevelPercentage","engineOffsetX","engineOffsetY","getRelativePoint","initialXRelative","initialYRelative","linkNextX","virtualDisplacementX","linkNextY","virtualDisplacementY","handleLinkDrag","next","hasStartedMoving","removePoint","moveDirection","addPoint","generatePoint","BifurcateLinkState","sourceEdited","sourceBefore","getLinkPoints","registerAction","MOUSE_DOWN","getMouseElement","snapPointToSourceLink","getRelativeMousePoint","eject","getLinkFactories","MOUSE_UP","isNearbySourcePosition","cleanUp","reportPosition","adjustBifurcationOverlayingSource","landing","mergeWithBifurcation","sourcePoints","closestCorner","getClosestCornerToPosition","closestPath","getClosestPathToPosition","snappedPosition","axis","sourcePoint","getPathPoints","pathPosition","getPathDirections","abs","secondLast","getSecondLastPosition","bifurcationToMerge","newMiddle","newLast","isStraight","adjustBifurcationPoints","newSource","call","AbstractDisplacementState","DragCanvasState","prev","initialCanvasX","initialCanvasY","nativeEvent","which","displacementX","displacementY","DragNewLinkState","config","createLinkModel","isNearbySourcePort","canLinkToPort","reverse","getFactoryForLink","tolerance","sourcePortSize","sourcePortPosition","MoveItemsState","getNodesPositions","getLinksPoints","adjustLinkPoints","linkDirections","adjustLinkBifurcations","lastDisplacement","element","getActionEventBus","getModelForEvent","getLinkDirections","nodesBefore","linksBefore","previous","initialPositions","entry","getBifurcatedLinks","getLinksFromNode","acc","getLinkDirection","currentDisplacement","BasePositionModel","moveEntity","adjustNodeLinks","item","initial","getGridPosition","adjustFirstAndLastPoints","closestToFirst","closestToLast","SelectionBoxState","SelectionLayerModel","addLayer","rel","right","bottom","setBox","getBoxDimensions","relative","initialX","initialY","rect","Rectangle","getSelectionEntities","getBoundingBox","allowSelection","bounds","containsPoint","getTopLeft","getBottomRight","SelectingState","transitionWithEvent","State","States","childStates","dragCanvas","dragNewLink","bifurcateLink","dragItems","DiagramEngine","initializeEngine","createEngine","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","registerListener","getStateMachine","pushState","getPortFactories","registerFactory","registerComponents","initializeModel","DiagramModel","setGridSize","setLocked","eventDidFire","function","adjustGridOffset","adjustGridZoom","realignGrid","setModel","getNodeFactories","load","circuit","deserializeModel","locked","repaint","offsetX","offsetY","zoom","document","body","style","setProperty","c","getSnappedRelativeMousePoint","handleComponentEdit","configurationsBefore","portsBefore","hasNewPort","newPort","hasRemovedPort","oldPort","portBefore","getSelectedNodes","fireAction","duplicateSelected","cutSelected","copySelected","pasteSelected","deleteSelected","zoomIn","zoomOut","synchronizeLink","setValue","synchronizeComponent","output","clearAllValues","clearLinkValues","clearPortValues","getNodes","Circle","Port","className","data-name","data-nodeid","PortWidget","distributePorts","numPorts","isNumberOfPortsEven","closestEven","startAt","floor","Array","splice","PortExtensionBar","size","place","PortExtension","portPositions","lastPortPosition","Wrapper","PositionedPort","Shape","viewBox","transform","AndWidget","inputPorts","getInputPorts","AndIcon","default","validate","INPUT_PORTS_NUMBER","parseInt","out","BufferWidget","BufferIcon","in","Button","button","ButtonWidget","onMouseDown","onClick","onMouseUp","onRelease","ButtonIcon","periodMs","animateTransition","transformOrigin","transition","ClockWidget","getValue","ClockIcon","step","emitInterval","FREQUENCY_HZ","highCount","lowCount","setInterval","getNextOutput","HIGH_DURATION","LOW_DURATION","clearInterval","NandWidget","NandIcon","PortExtensionConnector","NorWidget","NorIcon","NotWidget","NotIcon","OrWidget","OrIcon","XnorWidget","XnorIcon","behavior","MULTIPLE_INPUT_BEHAVIOR","numberOfOnInputs","XorWidget","XorIcon","And","Nand","Or","Nor","Xnor","Buffer","Not","Clock","groupedComponents","g","Container","ComponentSelectButton","handleClick","data-for","data-tip","data-place","HelpButton","HelpButtonMenu","HelpButtonMenuItem","DiagramStateButtons","handleClickSave","handleClickLoad","handleClickKeyboardShortcuts","handleClickRedoTour","handleClickAbout","helpButtonRef","useRef","helpMenuRef","useState","isHelpMenuOpen","setHelpMenuOpen","handleToggleHelpMenu","handleClickAway","contains","useEffect","ArrowLeft","Chevron","Close","Copy","rx","ry","Cut","x1","y1","x2","y2","Delete","Duplicate","Paste","Pause","Play","Redo","Settings","Stop","Undo","ZoomIn","ZoomOut","SimulationControlButtons","handleClickStart","handleClickPause","handleClickStop","Overlay","Window","Modal","children","Header","Title","h1","Subtitle","h2","Content","IconButton","error","Input","field","componentType","innerRef","htmlFor","option","ErrorMessage","ComponentConfigurationInput","form","errors","engineStub","getPortCoords","getWidth","getHeight","getTooltip","ErrorWidget","DraggableComponent","handleClose","draggable","onDragStart","setDragImage","currentTarget","setData","Tooltip","hide","DragArea","FormScroll","Footer","Hint","span","SubmitButton","getInitialValues","configuration","ComponentConfiguration","editMode","handleBack","handleSubmit","firstInputRef","buttonRef","focus","rebuild","initialValues","onSubmit","isValid","autoComplete","getFormSubmitLabel","ComponentEdit","isOpen","callback","useCallback","closeOnEsc","window","edit","HorizontalSeparator","hr","ComponentsGrid","ComponentButton","ComponentTitle","ComponentIcon","ComponentGroup","handleComponentSelect","setOpen","SearchBar","ComponentSearch","groups","filteredGroups","setFilteredGroups","searchText","setSearchText","autoFocus","placeholder","onChange","like","RegExp","newFilteredGroups","match","handleSearchChange","onKeyDown","handleKeyDown","ComponentSelect","selectedComponent","setSelectedComponent","Key","ContextMenuIconContainer","ContextMenuShortcutContainer","ComponentContextMenu","configureComponent","DiagramContextMenu","ContextMenus","Version","Divider","HelpAbout","paddingTop","marginTop","overflowY","display","flexDirection","alignItems","src","process","alt","version","margin","textAlign","href","namespace","repo","TableContainer","Table","table","TableColumn","td","HelpKeyboardShortcuts","DIMENSIONS","isSvg","transformed","labels","clock","parentNode","and","not","pulse","keyframes","Pulse","Beacon","imageStyle","alignSelf","borderRadius","boxShadow","marginBottom","Tour","recenterTourCircuit","currentStep","run","recenterCircuit","action","setTourRunning","loadCircuit","clearCircuit","EVENTS","STEP_AFTER","ACTIONS","NEXT","PREV","setState","TOUR_END","CLOSE","steps","title","content","placement","showProgress","disableOverlayClose","locale","skip","spotlightPadding","contextMenu","wire","simulation","lineHeight","showSkipButton","stepIndex","continuous","scrollToFirstStep","styles","tooltip","tooltipContent","fontSize","buttonBack","buttonNext","background","buttonSkip","border","back","close","open","beaconComponent","innerWidth","innerHeight","App","isComponentSelectOpen","isComponentEditOpen","isHelpKeyboardOpen","isHelpAboutOpen","shortcutHandler","isStopped","showAddComponent","selectedNodes","showEditComponent","isRunning","isCircuitEmpty","loadHandler","lastSaved","isTourAvailable","confirm","removeItem","shouldWarnUnload","currentCircuit","lastSavedCircuit","unloadHandler","returnValue","autoSave","synchronizeSimulation","getDiff","componentDiff","renderSimulation","console","log","alert","start","forceUpdate","pause","a","stop","hideAddComponent","componentEdit","hideEditComponent","isTourRunning","showHelpTour","showHelpKeyboard","hideHelpKeyboard","showHelpAbout","hideHelpAbout","handleLoadTourCircuit","circuitBeforeTour","tourCircuit","handleCenterTourCircuitOffset","handleUnloadTourCircuit","autoSaveInterval","getState","globalEventOff","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5553a68c.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"SimulationWorker.a337eedeea443fff512c.js\");\n};","module.exports = __webpack_public_path__ + \"static/media/bifurcation.e3ec32b9.gif\";","module.exports = __webpack_public_path__ + \"static/media/context-menu.94343183.gif\";","module.exports = __webpack_public_path__ + \"static/media/simulation.2d0f910c.gif\";","module.exports = __webpack_public_path__ + \"static/media/wire.e7e521da.gif\";","import { Point } from '@projectstorm/geometry';\n\n/**\n * Returns a position, but snapped to the grid.\n */\nexport const snap = (position, gridSize = 15) => {\n  if (position instanceof Point) {\n    return new Point(\n      Math.round(position.x / gridSize) * gridSize,\n      Math.round(position.y / gridSize) * gridSize,\n    );\n  }\n\n  return Math.round(position / gridSize) * gridSize;\n};\n\n/**\n * Checks if two points are on the same position.\n */\nexport const samePosition = (p1, p2) =>\n  p1 &&\n  p2 &&\n  Math.round(p1.x) === Math.round(p2.x) &&\n  Math.round(p1.y) === Math.round(p2.y);\n\n/**\n * Checks if all given points share the same X position.\n */\nexport const sameX = (...points) =>\n  points.map(p => Math.round(p.x)).every((p, i, arr) => p === arr[0]);\n\n/**\n * Checks if all given points share the same Y position.\n */\nexport const sameY = (...points) =>\n  points.map(p => Math.round(p.y)).every((p, i, arr) => p === arr[0]);\n\n/**\n * Checks if all given points share positions on any axis.\n */\nexport const sameAxis = (...points) =>\n  sameX(...points) || sameY(...points);\n\n/**\n * Checks if two points are nearby each other, given a tolerance.\n */\nexport const nearby = (p1, p2, tolerance) =>\n  Math.abs(p1.x - p2.x) <= tolerance &&\n  Math.abs(p1.y - p2.y) <= tolerance;\n\n/**\n * Finds the closest position to a link from a given point.\n */\nexport const closestPointToLink = (P, link) => {\n  const distance = (A, B) => Math.hypot(A.x - B.x, A.y - B.y);\n\n  const closestPointOnSegment = (Q, segment) => {\n    const { A, B } = segment;\n\n    const v = new Point(B.x - A.x, B.y - A.y);\n    const u = new Point(A.x - Q.x, A.y - Q.y);\n\n    const vu = v.x * u.x + v.y * u.y;\n    const vv = v.x ** 2 + v.y ** 2;\n\n    const t = -vu / vv;\n\n    // Closest point lies between A and B\n    if (t >= 0 && t <= 1) {\n      const closest = new Point(\n        (1 - t) * A.x + t * B.x,\n        (1 - t) * A.y + t * B.y,\n      );\n      return {\n        point: closest,\n        distance: distance(Q, closest),\n      };\n    }\n\n    // Closest point is either A or B\n    const distanceToA = distance(Q, A);\n    const distanceToB = distance(Q, B);\n\n    return distanceToA <= distanceToB\n      ? { point: A, distance: distanceToA }\n      : { point: B, distance: distanceToB };\n  };\n\n  if (!link.hasMiddlePoint()) {\n    return closestPointOnSegment(P, {\n      A: link.getFirstPosition(),\n      B: link.getLastPosition(),\n    }).point;\n  }\n\n  const firstSegment = closestPointOnSegment(P, {\n    A: link.getFirstPosition(),\n    B: link.getMiddlePosition(),\n  });\n\n  const lastSegment = closestPointOnSegment(P, {\n    A: link.getMiddlePosition(),\n    B: link.getLastPosition(),\n  });\n\n  if (firstSegment.distance <= lastSegment.distance) {\n    return firstSegment.point;\n  }\n  return lastSegment.point;\n};\n\n/**\n * Determines is a point is over a given segment.\n */\nconst isPointOverSegment = (point, segment) => {\n  const { A, B } = segment;\n\n  if (sameX(A, point, B)) {\n    const max = Math.max(A.y, B.y);\n    const min = Math.min(A.y, B.y);\n\n    return min <= point.y && point.y <= max;\n  }\n\n  if (sameY(A, point, B)) {\n    const max = Math.max(A.x, B.x);\n    const min = Math.min(A.x, B.x);\n\n    return min <= point.x && point.x <= max;\n  }\n\n  return false;\n};\n\n/**\n * Determines if a point is over a given link's first segment.\n */\nexport const isPointOverFirstLinkSegment = (point, link) =>\n  isPointOverSegment(point, {\n    A: link.getFirstPosition(),\n    B: link.getSecondPosition(),\n  });\n\n/**\n * Determines if a point is over a given link's second segment.\n */\nexport const isPointOverSecondLinkSegment = (point, link) => {\n  if (!link.hasMiddlePoint()) return false;\n\n  return isPointOverSegment(point, {\n    A: link.getSecondPosition(),\n    B: link.getLastPosition(),\n  });\n};\n\n/**\n * Determines if a point is over a given link.\n */\nexport const isPointOverLink = (point, link) =>\n  isPointOverFirstLinkSegment(point, link) ||\n  isPointOverSecondLinkSegment(point, link);\n\n/**\n * Searches for any link that the given link might be landing on.\n */\nexport const getLandingLink = (link, engine) => {\n  const point = link.getLastPoint().getPosition();\n\n  return Object.values(\n    engine\n      .getModel()\n      .getLinkLayers()[0]\n      .getLinks(),\n  ).find(target => {\n    if (target.getID() === link.getID()) return false;\n    return isPointOverLink(point, target);\n  });\n};\n","/* eslint-disable no-restricted-globals */\nexport const isValueValid = value =>\n  value === null || value === 0 || value === 1;\n\nexport const isInputValid = input =>\n  Object.values(input).every(isValueValid);\n\nexport const getCleanDiff = () => ({\n  components: {},\n  links: {},\n});\n\nexport const getComponent = id => {\n  if (!self.circuit) return null;\n\n  return (\n    self.circuit.components.find(component => component.id === id) ||\n    null\n  );\n};\n\n/**\n * Find all meshes that are affected by an emitted change.\n */\nexport const getAffectedMeshes = emitted =>\n  self.circuit.meshes.filter(mesh =>\n    mesh.inputs.some(\n      meshInput =>\n        emitted.from === meshInput.componentId &&\n        Object.keys(emitted.value).includes(meshInput.name),\n    ),\n  );\n\n/**\n * Finds all components that are connected on a given mesh's output.\n */\nexport const getMeshOutputComponents = mesh =>\n  [\n    ...new Set(\n      mesh.outputs.map(meshOutput => meshOutput.componentId),\n    ),\n  ].map(componentId => getComponent(componentId));\n\n/**\n * Determines the mesh input value.\n */\nexport const getMeshInputValue = mesh => {\n  const allInputValues = mesh.inputs\n    .map(portInfo => {\n      const component = self.circuit.components.find(\n        c => c.id === portInfo.componentId,\n      );\n\n      /**\n       * From the mesh's perspective, a component's output port is an\n       * input.\n       */\n      const port = component.getOutputPort(portInfo.name);\n\n      return port ? port.value : null;\n    })\n    .filter(value => value !== null);\n\n  // A mesh input is coherent if all of its inputs has the same value\n  const isCoherent = allInputValues.every(\n    (value, i, values) => value === values[0],\n  );\n\n  return isCoherent ? allInputValues[0] : 'error';\n};\n\n/**\n * Initialize all links and ports with the value 0.\n */\nexport const initializeDiffAndValues = () => {\n  self.circuit.components.forEach(component => {\n    component.setInputValues(\n      Object.fromEntries(\n        component.ports.input.map(port => [port.id, 0]),\n      ),\n    );\n    component.setOutputValues(\n      Object.fromEntries(\n        component.ports.output.map(port => [port.id, 0]),\n      ),\n    );\n  });\n\n  const diffLinks = self.circuit.meshes\n    .map(mesh => mesh.links)\n    .flat()\n    .reduce((obj, link) => ({ ...obj, [link]: 0 }), {});\n\n  const diffComponents = Object.fromEntries(\n    self.circuit.components.map(component => [\n      component.id,\n      {\n        output: Object.fromEntries(\n          [\n            ...component.ports.input,\n            ...component.ports.output,\n          ].map(port => [port.name, 0]),\n        ),\n        properties: component.getProperties(),\n      },\n    ]),\n  );\n\n  postMessage({\n    type: 'diff',\n    diff: { links: diffLinks, components: diffComponents },\n  });\n};\n\nexport const appendComponentDiff = (component, output) => {\n  if (!self.diff.components[component.id]) {\n    self.diff.components[component.id] = {\n      output: {},\n      properties: {},\n    };\n  }\n  self.diff.components[component.id] = {\n    ...self.diff.components[component.id],\n    output,\n    properties: component.getProperties(),\n  };\n};\n","import { Point } from '@projectstorm/geometry';\nimport {\n  PointModel,\n  LabelModel,\n  LinkModel as RDLinkModel,\n} from '@projectstorm/react-diagrams';\nimport { DefaultLabelModel } from '@projectstorm/react-diagrams-defaults';\n\nimport { sameAxis } from '../Diagram/states/common';\nimport { isValueValid } from '../Simulation/utils';\n\nexport default class LinkModel extends RDLinkModel {\n  constructor(options) {\n    super({\n      type: 'link',\n      ...options,\n    });\n\n    this.bifurcations = [];\n    this.bifurcationSource = null;\n    this.bifurcationTarget = null;\n\n    this.value = null;\n  }\n\n  addLabel(label) {\n    if (label instanceof LabelModel) {\n      return super.addLabel(label);\n    }\n\n    const newLabel = new DefaultLabelModel();\n    newLabel.setLabel(label);\n    return super.addLabel(newLabel);\n  }\n\n  setBifurcationSource(link) {\n    this.bifurcationSource = link;\n  }\n\n  getBifurcationSource() {\n    return this.bifurcationSource;\n  }\n\n  setBifurcationTarget(link) {\n    this.bifurcationTarget = link;\n  }\n\n  getBifurcationTarget() {\n    return this.bifurcationTarget;\n  }\n\n  isBifurcation() {\n    return !!(\n      this.getBifurcationSource() || this.getBifurcationTarget()\n    );\n  }\n\n  addBifurcation(link) {\n    if (\n      this.bifurcations.find(\n        bifurcation => bifurcation.getID() === link.getID(),\n      )\n    ) {\n      return;\n    }\n\n    this.bifurcations.push(link);\n  }\n\n  removeBifurcation(link) {\n    this.bifurcations = this.bifurcations.filter(\n      b => b.getID() !== link.getID(),\n    );\n  }\n\n  getBifurcations() {\n    return this.bifurcations;\n  }\n\n  getAllBifurcations() {\n    const result = [...this.bifurcations];\n    this.bifurcations.forEach(bifurcation =>\n      result.push(bifurcation.getAllBifurcations()),\n    );\n    return result.flat(Infinity);\n  }\n\n  getSelectionEntities() {\n    return [...super.getSelectionEntities(), ...this.bifurcations];\n  }\n\n  setSelected(selected) {\n    super.setSelected(selected);\n    this.bifurcations.forEach(b => b.setSelected(selected));\n\n    if (this.getSourcePort()) {\n      this.getSourcePort().setSelected(selected);\n    }\n    if (this.getTargetPort()) {\n      this.getTargetPort().setSelected(selected);\n    }\n  }\n\n  remove() {\n    this.bifurcations.forEach(bifurcation => bifurcation.remove());\n\n    if (this.bifurcationSource) {\n      this.bifurcationSource.removeBifurcation(this);\n    }\n\n    if (this.bifurcationTarget) {\n      this.bifurcationTarget.removeBifurcation(this);\n    }\n\n    super.remove();\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      bifurcations: this.bifurcations.map(b => b.getID()),\n      bifurcationSource: this.bifurcationSource\n        ? this.bifurcationSource.getID()\n        : null,\n      bifurcationTarget: this.bifurcationTarget\n        ? this.bifurcationTarget.getID()\n        : null,\n      value: this.value,\n    };\n  }\n\n  deserialize(event) {\n    super.deserialize(event);\n\n    const {\n      getModel,\n      registerModel,\n      data: { bifurcationSource, bifurcationTarget, bifurcations },\n    } = event;\n\n    registerModel(this);\n\n    requestAnimationFrame(() => {\n      this.points = event.data.points.map(\n        point =>\n          new PointModel({\n            link: this,\n            position: new Point(point.x, point.y),\n          }),\n      );\n\n      bifurcations.forEach(b =>\n        getModel(b).then(bifurcation =>\n          this.addBifurcation(bifurcation),\n        ),\n      );\n\n      if (bifurcationSource) {\n        getModel(bifurcationSource).then(source =>\n          this.setBifurcationSource(source),\n        );\n      }\n\n      if (bifurcationTarget) {\n        getModel(bifurcationTarget).then(target =>\n          this.setBifurcationTarget(target),\n        );\n      }\n\n      event.engine.repaintCanvas();\n    });\n  }\n\n  addPoint(pointModel, index = 1) {\n    super.addPoint(pointModel, index);\n\n    return pointModel;\n  }\n\n  getMiddlePoint() {\n    if (!this.hasMiddlePoint()) return null;\n\n    return this.getPoints()[1];\n  }\n\n  getSecondPoint() {\n    return this.getPoints()[1];\n  }\n\n  getSecondLastPoint() {\n    const points = this.getPoints();\n    return points[points.length - 2];\n  }\n\n  getFirstPosition() {\n    return this.getFirstPoint().getPosition();\n  }\n\n  getSecondPosition() {\n    return this.getSecondPoint().getPosition();\n  }\n\n  getMiddlePosition() {\n    if (!this.hasMiddlePoint()) return null;\n\n    return this.getMiddlePoint().getPosition();\n  }\n\n  getSecondLastPosition() {\n    return this.getSecondLastPoint().getPosition();\n  }\n\n  getLastPosition() {\n    return this.getLastPoint().getPosition();\n  }\n\n  hasMiddlePoint() {\n    return this.getPoints().length === 3;\n  }\n\n  isStraight() {\n    if (!this.hasMiddlePoint()) return true;\n\n    const first = this.getFirstPosition();\n    const middle = this.getMiddlePosition();\n    const last = this.getLastPosition();\n\n    if (sameAxis(first, middle, last)) return true;\n\n    return false;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  getColor() {\n    if (this.isSelected()) return 'var(--link-selected)';\n\n    if (!isValueValid(this.value)) return 'var(--value-error)';\n    if (this.value === 1) return 'var(--value-on)';\n    if (this.value === 0) return 'var(--value-off)';\n\n    return 'var(--link-unselected)';\n  }\n}\n","import { PortModel as RDPortModel } from '@projectstorm/react-diagrams';\n\nimport LinkModel from '../Link/LinkModel';\nimport { isValueValid } from '../Simulation/utils';\n\nexport default class PortModel extends RDPortModel {\n  constructor(options = {}) {\n    super({\n      type: 'Port',\n      maximumLinks: 1,\n      ...options,\n    });\n\n    this.value = null;\n    this.input = null;\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      input: this.input,\n      value: this.value,\n    };\n  }\n\n  deserialize(event, engine) {\n    super.deserialize(event, engine);\n    this.value = event.data.value;\n    this.input = event.data.input;\n  }\n\n  setAsInput() {\n    this.input = true;\n  }\n\n  setAsOutput() {\n    this.input = false;\n  }\n\n  isInput() {\n    return this.input === true;\n  }\n\n  isOutput() {\n    return this.input === false;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  isNewLinkAllowed() {\n    return (\n      Object.keys(this.getLinks()).length < this.getMaximumLinks()\n    );\n  }\n\n  canLinkToPort(port) {\n    return port.isNewLinkAllowed() && this.getID() !== port.getID();\n  }\n\n  createLinkModel() {\n    if (this.isNewLinkAllowed()) {\n      return new LinkModel();\n    }\n    return null;\n  }\n\n  getMainLink() {\n    const links = Object.values(this.getLinks());\n    return links.length > 0 ? links[0] : null;\n  }\n\n  getColor() {\n    if (this.value === null) {\n      const link = this.getMainLink();\n      if (link) return link.getColor();\n      return 'var(--port-unconnected)';\n    }\n\n    if (!isValueValid(this.value)) return 'var(--value-error)';\n    if (this.value === 1) return 'var(--value-on)';\n    if (this.value === 0) return 'var(--value-off)';\n    return 'none';\n  }\n}\n","/**\n * In order to execute the simulation workload on a Web Worker, we\n * need to serialize some component properties and methods to send\n * them to the worker.\n */\n\n/* ---------------------------------------------------------------- */\n\n/**\n * Receives a component instance and returns the name of all custom\n * properties.\n */\nconst getComponentPropertyNames = instance =>\n  Object.keys(instance).filter(\n    key =>\n      ![\n        'listeners',\n        'options',\n        'position',\n        'ports',\n        'width',\n        'height',\n        'configurations',\n        'parent',\n      ].includes(key),\n  );\n\n/**\n * Receives a component class and returns the name of all custom\n * methods.\n */\nconst getModelMethodNames = Class =>\n  Object.getOwnPropertyNames(Class.prototype).filter(\n    methodName => !['constructor'].includes(methodName),\n  );\n\nconst serializeModels = components =>\n  components.map(component => {\n    const { type, Model } = component;\n\n    return {\n      type,\n      methods: getModelMethodNames(Model).reduce(\n        (obj, name) => ({\n          ...obj,\n          [name]: Model.prototype[name].toString(),\n        }),\n        {},\n      ),\n    };\n  });\n\nconst serializePorts = ports =>\n  Object.values(ports).map(port => ({\n    id: port.getID(),\n    name: port.getName(),\n    input: port.isInput(),\n  }));\n\n/**\n * Prepares a list of component instances to transfer, including\n * configuration and instance properties.\n */\nconst serializeComponents = components =>\n  components.map(component => ({\n    id: component.getID(),\n    type: component.getType(),\n    configurations: component.configurations,\n    ports: serializePorts(component.ports),\n    properties: getComponentPropertyNames(component).reduce(\n      (obj, key) => ({ ...obj, [key]: component[key] }),\n      {},\n    ),\n  }));\n\nconst getPortInfo = port =>\n  port\n    ? {\n        componentId: port.getParent().getID(),\n        name: port.getName(),\n        input: port.isInput(),\n      }\n    : null;\n\nconst getLinkId = link => (link ? link.getID() : null);\n\nconst serializeLinks = links =>\n  links.map(link => ({\n    id: link.getID(),\n    source: getPortInfo(link.getSourcePort()),\n    target: getPortInfo(link.getTargetPort()),\n    bifurcations: link\n      .getBifurcations()\n      .map(bifurcation => bifurcation.getID()),\n    bifurcation: {\n      source: getLinkId(link.getBifurcationSource()),\n      target: getLinkId(link.getBifurcationTarget()),\n    },\n    isBifurcation: link.isBifurcation(),\n  }));\n\n/**\n * Prepares the whole diagram to be transferred.\n */\nconst serialize = (diagram, models) => ({\n  models: serializeModels(models),\n  links: serializeLinks(Object.values(diagram.layers[0].models)),\n  components: serializeComponents(\n    Object.values(diagram.layers[1].models),\n  ),\n});\n\nexport default serialize;\n","import serialize from './serialize';\nimport SimulationWorker from './simulation.worker';\nimport { getCleanDiff } from './utils';\n\nconst worker = new SimulationWorker();\n\n/**\n * SimulationEngine encapsulates SimulationWorker to act as an\n * interface to the application. It handles messaging with the worker,\n * keeping track of the `diff` being generated so the application can\n * use it to update itself.\n */\nexport default class SimulationEngine {\n  constructor(components) {\n    this.components = components;\n\n    this.worker = worker;\n    this.worker.addEventListener('message', this.onSimulationMessage);\n    this.state = 'stopped';\n    this.clearDiff();\n  }\n\n  onSimulationMessage = ({ data: { type, diff } }) => {\n    if (type === 'diff') {\n      this.appendDiff(diff);\n    }\n  };\n\n  start(diagram) {\n    this.worker.postMessage({\n      command: 'start',\n      diagram:\n        this.state === 'stopped'\n          ? serialize(diagram, this.components)\n          : undefined,\n    });\n    this.state = 'started';\n  }\n\n  pause() {\n    this.worker.postMessage({ command: 'pause' });\n    this.state = 'paused';\n  }\n\n  async stop() {\n    return new Promise(resolve => {\n      const waitForEnd = ({ data: { type } }) => {\n        if (type === 'clear') {\n          this.worker.removeEventListener('message', waitForEnd);\n          this.state = 'stopped';\n          resolve();\n        }\n      };\n      this.worker.addEventListener('message', waitForEnd);\n\n      this.worker.postMessage({ command: 'stop' });\n    });\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  isRunning() {\n    return this.state === 'started';\n  }\n\n  isPaused() {\n    return this.state === 'paused';\n  }\n\n  isStopped() {\n    return this.state === 'stopped';\n  }\n\n  getDiff() {\n    return this.diff;\n  }\n\n  clearDiff() {\n    this.diff = getCleanDiff();\n  }\n\n  appendDiff(diff) {\n    this.diff = {\n      components: { ...this.diff.components, ...diff.components },\n      links: { ...this.diff.links, ...diff.links },\n    };\n  }\n}\n\n/**\n * Emit is exported as a separate function so it can be used on\n * `BaseModel`.\n */\nexport const emit = (from, value) =>\n  worker.postMessage({\n    command: 'emit',\n    emitted: { from, value },\n  });\n","import { Point } from '@projectstorm/geometry';\nimport { NodeModel } from '@projectstorm/react-diagrams';\n\nimport PortModel from './Port/PortModel';\nimport { emit } from './Simulation/SimulationEngine';\n\nconst getPort = port => {\n  if (port instanceof PortModel) return port;\n  return new PortModel({ name: port });\n};\n\nexport default class BaseModel extends NodeModel {\n  constructor(type, configurations) {\n    super({ type });\n\n    this.initialize(configurations);\n\n    this.configurations = configurations;\n  }\n\n  serialize() {\n    return {\n      ...super.serialize(),\n      configurations: this.configurations,\n    };\n  }\n\n  addInputPort(arg) {\n    const port = getPort(arg);\n    port.setAsInput();\n    super.addPort(port);\n  }\n\n  addOutputPort(arg) {\n    const port = getPort(arg);\n    port.setAsOutput();\n    super.addPort(port);\n  }\n\n  addPort(arg) {\n    const port = getPort(arg);\n\n    if (port.isInput()) {\n      this.addInputPort(port);\n      return;\n    }\n\n    if (port.isOutput()) {\n      this.addOutputPort(port);\n      return;\n    }\n\n    throw new Error(\n      '[logossim] Use either `addInputPort` or `addOutputPort`',\n    );\n  }\n\n  removePort(arg) {\n    const port = getPort(arg);\n    super.removePort(port);\n  }\n\n  getInputPorts() {\n    return Object.fromEntries(\n      Object.entries(this.getPorts()).filter(([, port]) =>\n        port.isInput(),\n      ),\n    );\n  }\n\n  getOutputPorts() {\n    return Object.fromEntries(\n      Object.entries(this.getPorts()).filter(\n        ([, port]) => !port.isInput(),\n      ),\n    );\n  }\n\n  getAllLinks() {\n    return Object.values(this.getPorts())\n      .map(port => port.getMainLink())\n      .filter(link => !!link)\n      .reduce(\n        (arr, link) => [...arr, link, ...link.getAllBifurcations()],\n        [],\n      );\n  }\n\n  clone(...args) {\n    const clone = super.clone(...args);\n    clone.setPosition(new Point(this.getX() + 15, this.getY() + 15));\n    return clone;\n  }\n\n  initialize() {}\n\n  onSimulationStart() {}\n\n  onSimulationPause() {}\n\n  onSimulationStop() {}\n\n  step() {}\n\n  emit(value) {\n    emit(this.getID(), value);\n  }\n}\n","import React from 'react';\nimport { MenuProvider } from 'react-contexify';\n\nimport { AbstractReactFactory } from '@projectstorm/react-canvas-core';\n\nexport default class Component extends AbstractReactFactory {\n  constructor({\n    type,\n    name,\n    description,\n    group,\n    configurations = [],\n    model,\n    widget,\n    icon,\n  }) {\n    super(type);\n    this.name = name;\n    this.description = description;\n    this.group = group;\n    this.configurations = configurations;\n    this.Model = model;\n    this.Widget = widget;\n    this.Icon = icon;\n  }\n\n  generateReactWidget(event) {\n    const { Widget } = this;\n    const { model } = event;\n\n    return (\n      <MenuProvider id=\"component\" storeRef={false} data={model}>\n        <Widget engine={this.engine} model={model} />\n      </MenuProvider>\n    );\n  }\n\n  generateModel(event) {\n    const { Model } = this;\n    const { type, configurations } = event.initialConfig;\n\n    return new Model(type, configurations);\n  }\n}\n","import styled from 'styled-components';\n\nconst DroppableLayer = styled.div.attrs(({ disabled, ...props }) => ({\n  ...props,\n  onDragOver: event => event.preventDefault(),\n  onDrop: event => {\n    if (disabled) return;\n\n    const component = JSON.parse(\n      event.dataTransfer.getData('component'),\n    );\n\n    props.handleComponentDrop(event, component);\n  },\n}))`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport default DroppableLayer;\n","import React from 'react';\nimport { MenuProvider } from 'react-contexify';\n\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\n\nimport styled from 'styled-components';\n\nimport DroppableLayer from './DroppableLayer';\n\nconst FullscreenCanvas = styled(CanvasWidget)`\n  height: 100%;\n  width: 100%;\n`;\n\nconst Diagram = ({ engine }) => (\n  <MenuProvider id=\"diagram\" storeRef={false} data={{ test: 1 }}>\n    <DroppableLayer\n      handleComponentDrop={(...args) =>\n        engine.handleComponentDrop(...args)\n      }\n      disabled={engine.isLocked()}\n    >\n      <FullscreenCanvas engine={engine.getEngine()} />\n    </DroppableLayer>\n  </MenuProvider>\n);\n\nexport default Diagram;\n","import React, { Component } from 'react';\n\nimport { DefaultLinkSegmentWidget } from '@projectstorm/react-diagrams-defaults';\n\nimport { samePosition } from '../Diagram/states/common';\n\nexport default class LinkWidget extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refPaths = [];\n  }\n\n  componentDidUpdate() {\n    this.updateRenderedPaths();\n  }\n\n  componentDidMount() {\n    this.updateRenderedPaths();\n  }\n\n  componentWillUnmount() {\n    this.clearRenderedPaths();\n  }\n\n  updateRenderedPaths() {\n    const { link } = this.props;\n\n    link.setRenderedPaths(\n      this.refPaths.map(ref => {\n        return ref.current;\n      }),\n    );\n  }\n\n  clearRenderedPaths() {\n    const { link } = this.props;\n\n    link.setRenderedPaths([]);\n  }\n\n  generatePathPoints() {\n    const { link } = this.props;\n\n    const points = link.getPoints();\n\n    return points\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\n      .filter(tuple => tuple.to);\n  }\n\n  generateLinePath({ from, to }) {\n    return `M${from.getX()},${from.getY()} L ${to.getX()},${to.getY()}`;\n  }\n\n  renderSegment(path, index) {\n    const { diagramEngine, link, factory, options = {} } = this.props;\n\n    const { selected } = options;\n\n    const ref = React.createRef();\n    this.refPaths.push(ref);\n\n    return (\n      <DefaultLinkSegmentWidget\n        key={`link-${index}`}\n        path={path}\n        selected={selected}\n        diagramEngine={diagramEngine}\n        factory={factory}\n        link={link}\n        forwardRef={ref}\n        onSelection={() => {}}\n      />\n    );\n  }\n\n  renderPoint(position, loose = false) {\n    const { link } = this.props;\n    const color = link.getColor();\n\n    return (\n      <circle\n        r={5}\n        fill={loose ? 'var(--background)' : color}\n        stroke={loose ? color : 'none'}\n        strokeWidth=\"var(--link-width)\"\n        cx={position.x}\n        cy={position.y}\n      />\n    );\n  }\n\n  renderBifurcationSourcePoint() {\n    const { link } = this.props;\n\n    const bifurcationSource = link.getBifurcationSource();\n    if (!bifurcationSource) return null;\n\n    const bifurcationOrigin = link.getFirstPoint().getPosition();\n    const lastSourcePoint = bifurcationSource\n      .getLastPoint()\n      .getPosition();\n\n    if (samePosition(bifurcationOrigin, lastSourcePoint)) {\n      return null;\n    }\n\n    return this.renderPoint(bifurcationOrigin);\n  }\n\n  renderBifurcationTargetPoint() {\n    const { link } = this.props;\n\n    const bifurcationTarget = link.getBifurcationTarget();\n    if (!bifurcationTarget) return null;\n\n    const bifurcationTargetPosition = link\n      .getLastPoint()\n      .getPosition();\n    const lastSourcePoint = bifurcationTarget\n      .getLastPoint()\n      .getPosition();\n\n    if (samePosition(bifurcationTargetPosition, lastSourcePoint)) {\n      return null;\n    }\n\n    return this.renderPoint(bifurcationTargetPosition);\n  }\n\n  renderLooseLinkPoint() {\n    const { link } = this.props;\n\n    if (link.getTargetPort()) return null;\n    if (link.getBifurcationTarget()) return null;\n\n    const bifurcations = link.getBifurcations();\n    const lastSourcePoint = link.getLastPoint().getPosition();\n\n    const isContinued = bifurcations.some(\n      bifurcation =>\n        samePosition(\n          bifurcation.getFirstPosition(),\n          lastSourcePoint,\n        ) ||\n        samePosition(bifurcation.getLastPosition(), lastSourcePoint),\n    );\n\n    if (isContinued) return null;\n\n    return this.renderPoint(lastSourcePoint, true);\n  }\n\n  render() {\n    const { link } = this.props;\n\n    this.refPaths = [];\n\n    return (\n      <>\n        <g data-default-link-test={link.getOptions().testName}>\n          {this.generatePathPoints().map((tuple, index) =>\n            this.renderSegment(this.generateLinePath(tuple), index),\n          )}\n        </g>\n        {this.renderBifurcationSourcePoint()}\n        {this.renderBifurcationTargetPoint()}\n        {this.renderLooseLinkPoint()}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport { DefaultLinkFactory } from '@projectstorm/react-diagrams-defaults';\n\nimport styled from 'styled-components';\n\nimport LinkModel from './LinkModel';\nimport LinkWidget from './LinkWidget';\n\nconst Path = styled.path`\n  pointer-events: all;\n`;\n\nexport default class LinkFactory extends DefaultLinkFactory {\n  constructor() {\n    super('link');\n  }\n\n  generateModel() {\n    return new LinkModel();\n  }\n\n  generateReactWidget(event) {\n    return (\n      <LinkWidget\n        diagramEngine={this.engine}\n        link={event.model}\n        factory={this}\n      />\n    );\n  }\n\n  generateLinkSegment(model, selected, path) {\n    return (\n      <Path\n        stroke={model.getColor()}\n        strokeWidth=\"var(--link-width)\"\n        d={path}\n      />\n    );\n  }\n}\n","import { AbstractModelFactory } from '@projectstorm/react-canvas-core';\n\nimport PortModel from './PortModel';\n\nexport default class PortFactory extends AbstractModelFactory {\n  constructor() {\n    super('Port');\n  }\n\n  generateModel() {\n    return new PortModel();\n  }\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\n\n/**\n * Handles clipboard actions.\n */\nexport default class ClipboardAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n\n          const { code } = event;\n          if (code === 'KeyX') this.handleCut();\n          if (code === 'KeyC') this.handleCopy();\n          if (code === 'KeyV') this.handlePaste();\n        }\n      },\n    });\n  }\n\n  matchesInput = ({ ctrlKey, code }) =>\n    ctrlKey &&\n    (code === 'KeyX' || code === 'KeyC' || code === 'KeyV');\n\n  getSelectedComponents = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked());\n\n  /** Cut */\n  handleCut = () => {\n    const selected = this.getSelectedComponents();\n    const copies = selected.map(entity => entity.clone().serialize());\n\n    this.engine.fireEvent(\n      {\n        nodes: selected,\n        links: selected.reduce(\n          (arr, node) => [...arr, ...node.getAllLinks()],\n          [],\n        ),\n      },\n      'entitiesRemoved',\n    );\n    selected.forEach(node => node.remove());\n    this.engine.repaintCanvas();\n\n    localStorage.setItem('clipboard', JSON.stringify(copies));\n  };\n\n  /** Copy */\n  handleCopy = () => {\n    const copies = this.getSelectedComponents().map(entity =>\n      entity.clone().serialize(),\n    );\n\n    localStorage.setItem('clipboard', JSON.stringify(copies));\n  };\n\n  /** Paste */\n  handlePaste = () => {\n    const model = this.engine.getModel();\n\n    const clipboard = JSON.parse(localStorage.getItem('clipboard'));\n    if (!clipboard) return;\n\n    model.clearSelection();\n\n    const models = clipboard.map(serialized => {\n      const modelInstance = model\n        .getActiveNodeLayer()\n        .getChildModelFactoryBank(this.engine)\n        .getFactory(serialized.type)\n        .generateModel({ initialConfig: serialized });\n\n      modelInstance.deserialize({\n        engine: this.engine,\n        data: serialized,\n        registerModel: () => {},\n      });\n\n      return modelInstance;\n    });\n\n    models.forEach(modelInstance => {\n      model.addNode(modelInstance);\n      modelInstance.setSelected(true);\n    });\n\n    localStorage.setItem(\n      'clipboard',\n      JSON.stringify(\n        models.map(modelInstance =>\n          modelInstance.clone().serialize(),\n        ),\n      ),\n    );\n\n    this.engine.fireEvent({ nodes: models }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\nimport LinkModel from '../../Link/LinkModel';\n\n/**\n * Handles delete actions.\n */\nexport default class DeleteAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput = event => event.code === 'Delete';\n\n  handleAction = () => {\n    const entities = this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => !model.isLocked());\n\n    this.fireEvent(entities);\n\n    entities.forEach(model => model.remove());\n\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = entities => {\n    // All selected nodes\n    const nodes = entities.filter(\n      model => model instanceof BaseModel,\n    );\n\n    // All selected links\n    const links = entities.filter(\n      model => model instanceof LinkModel,\n    );\n\n    // All links from selected nodes\n    const nodesLinks = nodes.reduce(\n      (arr, node) => [...arr, ...node.getAllLinks()],\n      [],\n    );\n\n    this.engine.fireEvent(\n      { nodes, links: [...nodesLinks, ...links] },\n      'entitiesRemoved',\n    );\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nimport BaseModel from '../../BaseModel';\n\n/**\n * Handle duplication (clone) actions.\n */\nexport default class DuplicateAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n          this.handleAction();\n        }\n      },\n    });\n  }\n\n  matchesInput = event => event.ctrlKey && event.code === 'KeyD';\n\n  handleAction = () => {\n    const model = this.engine.getModel();\n\n    const clones = model\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel)\n      .filter(entity => !entity.isLocked())\n      .map(entity => entity.clone());\n\n    model.clearSelection();\n\n    clones.forEach(clone => {\n      model.addNode(clone);\n      clone.setSelected(true);\n    });\n\n    this.engine.fireEvent({ nodes: clones }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\n/**\n * Handles undo/redo actions.\n */\nexport default class UndoRedoAction extends Action {\n  constructor(areShortcutsAllowed) {\n    super({\n      type: InputType.KEY_DOWN,\n      fire: ({ event }) => {\n        if (!areShortcutsAllowed()) return;\n        if (this.engine.getModel().isLocked()) return;\n\n        if (this.matchesInput(event)) {\n          event.preventDefault();\n\n          const { ctrlKey, shiftKey, code } = event;\n          if (ctrlKey && !shiftKey && code === 'KeyZ')\n            this.handleUndo();\n          else this.handleRedo();\n        }\n      },\n    });\n  }\n\n  matchesInput = ({ ctrlKey, shiftKey, code }) =>\n    (ctrlKey && (code === 'KeyZ' || code === 'KeyY')) ||\n    (ctrlKey && shiftKey && code === 'KeyZ');\n\n  /** Undo */\n  handleUndo = () => {\n    this.engine.commands.undo();\n    this.engine.repaintCanvas();\n  };\n\n  /** Redo */\n  handleRedo = () => {\n    this.engine.commands.redo();\n    this.engine.repaintCanvas();\n  };\n}\n","import { Action, InputType } from '@projectstorm/react-canvas-core';\n\nconst ZOOM_LEVELS = [15, 25, 50, 75, 100, 150, 200, 300];\n\n/**\n * Handles zoom in/out actions.\n */\nexport default class ZoomAction extends Action {\n  constructor() {\n    super({\n      type: InputType.MOUSE_WHEEL,\n      fire: ({ event }) => {\n        event.stopPropagation();\n\n        const model = this.engine.getModel();\n\n        // We can block layer rendering because we are only targeting the transforms\n        model.getLayers().forEach(layer => layer.allowRepaint(false));\n\n        const zoomDirection =\n          Math.sign(event.deltaY) > 0 ? 'in' : 'out';\n\n        const currentZoomLevelIndex = ZOOM_LEVELS.indexOf(\n          ZOOM_LEVELS.includes(model.getZoomLevel())\n            ? model.getZoomLevel()\n            : 100,\n        );\n\n        let nextZoomLevelIndex;\n        if (zoomDirection === 'in') {\n          nextZoomLevelIndex = Math.min(\n            currentZoomLevelIndex + 1,\n            ZOOM_LEVELS.length - 1,\n          );\n        } else {\n          nextZoomLevelIndex = Math.max(currentZoomLevelIndex - 1, 0);\n        }\n\n        const oldZoomFactor = model.getZoomLevel() / 100;\n        model.setZoomLevel(ZOOM_LEVELS[nextZoomLevelIndex]);\n        const zoomFactor = model.getZoomLevel() / 100;\n\n        const boundingRect = this.engine\n          .getCanvas()\n          .getBoundingClientRect();\n        const clientWidth = boundingRect.width;\n        const clientHeight = boundingRect.height;\n\n        // Compute difference between rect before and after scroll\n        const widthDiff =\n          clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n        const heightDiff =\n          clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\n        // Compute mouse coords relative to canvas\n        const clientX = event.clientX - boundingRect.left;\n        const clientY = event.clientY - boundingRect.top;\n\n        // Compute width and height increment factor\n        const xFactor =\n          (clientX - model.getOffsetX()) /\n          oldZoomFactor /\n          clientWidth;\n        const yFactor =\n          (clientY - model.getOffsetY()) /\n          oldZoomFactor /\n          clientHeight;\n\n        model.setOffset(\n          model.getOffsetX() - widthDiff * xFactor,\n          model.getOffsetY() - heightDiff * yFactor,\n        );\n        this.engine.repaintCanvas();\n\n        // Re-enable rendering\n        model.getLayers().forEach(layer => layer.allowRepaint(true));\n      },\n    });\n  }\n}\n","import { PointModel } from '@projectstorm/react-diagrams';\n\nconst commandHandlers = ({ engine, editComponentConfiguration }) => {\n  const adjustLink = link => {\n    /**\n     * Port instance could have changed in consequence of component\n     * configuration edit.\n     */\n    let sourcePort = link.getSourcePort();\n    if (sourcePort) {\n      const node = engine.getModel().getNode(\n        link\n          .getSourcePort()\n          .getParent()\n          .getID(),\n      );\n\n      sourcePort = node.getPort(sourcePort.getName());\n\n      link.setSourcePort(sourcePort);\n      sourcePort.addLink(link);\n    }\n\n    let targetPort = link.getTargetPort();\n    if (targetPort) {\n      const node = engine.getModel().getNode(\n        link\n          .getTargetPort()\n          .getParent()\n          .getID(),\n      );\n      targetPort = node.getPort(targetPort.getName());\n\n      link.setTargetPort(targetPort);\n      targetPort.addLink(link);\n    }\n\n    if (link.getBifurcationSource())\n      link.getBifurcationSource().addBifurcation(link);\n\n    if (link.getBifurcationTarget())\n      link.getBifurcationTarget().addBifurcation(link);\n\n    return link;\n  };\n\n  return {\n    /**\n     * Componend added handler. Occurs when a component is added or\n     * pasted.\n     */\n    componentsAdded: ({ nodes }) => {\n      engine.commands.add({\n        execute: () => {\n          nodes.forEach(node => engine.getModel().addNode(node));\n        },\n        undo: () => {\n          nodes.forEach(node => node.remove());\n        },\n      });\n    },\n\n    /**\n     * Component configuration edit handler.\n     */\n    componentEdited: ({ node, configurations, links }) => {\n      engine.commands.add({\n        execute: () => {\n          editComponentConfiguration(node, configurations.after);\n        },\n        undo: () => {\n          editComponentConfiguration(node, configurations.before);\n\n          links.before.forEach(link =>\n            engine.getModel().addLink(adjustLink(link)),\n          );\n        },\n      });\n    },\n\n    /**\n     * Link added handler. Occurs on new links or bifurcations.\n     */\n    linkAdded: ({ link }) => {\n      engine.commands.add({\n        execute: () => {\n          engine.getModel().addLink(adjustLink(link));\n        },\n        undo: () => {\n          link.remove();\n        },\n      });\n    },\n\n    /**\n     * Link changed handler. Occurs when a link is extended.\n     */\n    linkChanged: ({ before, after }) => {\n      const handleLinkChanged = (from, to) => {\n        const link = engine.getModel().getLink(from.id);\n\n        // Update link points\n        link.setPoints(\n          from.points.map(position => {\n            const point = new PointModel({ link });\n            point.setPosition(position);\n            return point;\n          }),\n        );\n\n        // Updates bifurcation target\n        if (from.bifurcationTarget) {\n          const target = engine\n            .getModel()\n            .getLink(from.bifurcationTarget);\n          link.setBifurcationTarget(target);\n          target.addBifurcation(link);\n        } else if (to.bifurcationTarget) {\n          const oldTarget = engine\n            .getModel()\n            .getLink(to.bifurcationTarget);\n          link.setBifurcationTarget(null);\n          oldTarget.removeBifurcation(link);\n        }\n      };\n\n      engine.commands.add({\n        execute: () => {\n          handleLinkChanged(after, before);\n        },\n        undo: () => {\n          handleLinkChanged(before, after);\n        },\n      });\n    },\n\n    /**\n     * Components and links removal handler.\n     */\n    entitiesRemoved: ({ nodes, links }) => {\n      engine.commands.add({\n        execute: () => {\n          // Removes all nodes\n          nodes.forEach(node => node.remove());\n\n          // Removes all links\n          links.forEach(link => link.remove());\n        },\n        undo: () => {\n          /**\n           * Adds all links in the correct order. Bifurcations should be\n           * added before, otherwise links on the diagram are incorretly\n           * rendered.\n           */\n          links\n            .map(adjustLink)\n            .sort((l1, l2) => {\n              if (\n                l1.getBifurcationSource() === l2 ||\n                l1.getBifurcationTarget() === l2\n              )\n                return 1;\n\n              if (\n                l2.getBifurcationSource() === l1 ||\n                l2.getBifurcationTarget() === l1\n              )\n                return -1;\n\n              return 0;\n            })\n            .forEach(link =>\n              engine.getModel().addLink(adjustLink(link)),\n            );\n\n          // Adds all nodes\n          nodes.forEach(node => engine.getModel().addNode(node));\n        },\n      });\n    },\n\n    /**\n     * Components and links move handler.\n     */\n    entitiesMoved: ({ nodes, links }) => {\n      const handleEntitiesMoved = state => {\n        // Updates all moved nodes position\n        nodes[state].forEach(({ id, position }) => {\n          const node = engine.getModel().getNode(id);\n          node.setPosition(position.x, position.y);\n        });\n\n        // Updates all moved links points\n        links[state].forEach(({ id, points }) => {\n          const link = engine.getModel().getLink(id);\n          link.setPoints(\n            points.map(position => {\n              const point = new PointModel({ link });\n              point.setPosition(position);\n              return point;\n            }),\n          );\n        });\n      };\n\n      engine.commands.add({\n        execute: () => {\n          handleEntitiesMoved('after');\n        },\n        undo: () => {\n          handleEntitiesMoved('before');\n        },\n      });\n    },\n  };\n};\n\nexport default commandHandlers;\n","export default class Command {\n  constructor(execute, undo) {\n    this.execute = execute;\n    this.undo = undo;\n  }\n\n  execute(engine) {\n    this.execute(engine);\n  }\n\n  undo(engine) {\n    this.undo(engine);\n  }\n}\n","import Command from './Command';\n\n/**\n * This class manages the undo/redo stack.\n */\nexport default class CommandManager {\n  constructor() {\n    this.clear();\n  }\n\n  clear() {\n    this.stack = [];\n    this.index = 0;\n  }\n\n  add({ execute, undo }) {\n    const command = new Command(execute, undo);\n    this.stack.length = this.index;\n    this.stack.push(command);\n    this.index += 1;\n  }\n\n  undo() {\n    if (this.index > 0) {\n      this.index -= 1;\n      const command = this.stack[this.index];\n      command.undo();\n    }\n  }\n\n  redo() {\n    if (this.index < this.stack.length) {\n      const command = this.stack[this.index];\n      command.execute();\n      this.index += 1;\n    }\n  }\n}\n","import { Point } from '@projectstorm/geometry';\n\nimport { snap, samePosition } from './common';\n\nconst getRelativePoint = (point, model) => {\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\n  const engineOffsetX = model.getOffsetX() / zoomLevelPercentage;\n  const engineOffsetY = model.getOffsetY() / zoomLevelPercentage;\n\n  return new Point(point.x - engineOffsetX, point.y - engineOffsetY);\n};\n\nconst nextLinkPosition = (\n  event,\n  model,\n  initialRelative,\n  sourcePosition,\n) => {\n  const point = getRelativePoint(sourcePosition, model);\n\n  const zoomLevelPercentage = model.getZoomLevel() / 100;\n  const initialXRelative = initialRelative.x / zoomLevelPercentage;\n  const initialYRelative = initialRelative.y / zoomLevelPercentage;\n\n  const linkNextX =\n    point.x +\n    (initialXRelative - sourcePosition.x) +\n    event.virtualDisplacementX;\n  const linkNextY =\n    point.y +\n    (initialYRelative - sourcePosition.y) +\n    event.virtualDisplacementY;\n\n  return snap(\n    new Point(linkNextX, linkNextY),\n    model.options.gridSize,\n  );\n};\n\n/**\n * Handles mouse move on link or bifurcation creation, creating and\n * moving link points according to user input.\n *\n * This implementation mimics logisim link creation behavior.\n */\nexport default function handleLinkDrag(event, link) {\n  const first = link.getFirstPosition();\n  const last = link.getLastPosition();\n\n  const next = nextLinkPosition(\n    event,\n    this.engine.getModel(),\n    { x: this.initialXRelative, y: this.initialYRelative },\n    first,\n  );\n\n  if (!this.hasStartedMoving && samePosition(first, last)) {\n    /**\n     * For some reason, inputs are only valid after the first and last\n     * position are equals once. Before that, the last position is\n     * (0, 0).\n     */\n    this.hasStartedMoving = true;\n  }\n\n  if (this.hasStartedMoving) {\n    if (!link.hasMiddlePoint()) {\n      if (last.x !== next.x) {\n        if (!this.moveDirection) {\n          this.moveDirection = 'horizontal';\n        }\n\n        if (this.moveDirection === 'vertical') {\n          link.addPoint(link.generatePoint(last.x, next.y), 1);\n        }\n      } else if (last.y !== next.y) {\n        if (!this.moveDirection) {\n          this.moveDirection = 'vertical';\n        }\n\n        if (this.moveDirection === 'horizontal') {\n          link.addPoint(link.generatePoint(next.x, last.y), 1);\n        }\n      }\n    } else {\n      const middle = link.getMiddlePosition();\n      if (samePosition(middle, last)) {\n        link.removePoint(link.getMiddlePoint());\n      } else if (samePosition(first, middle)) {\n        link.removePoint(link.getMiddlePoint());\n        this.moveDirection =\n          this.moveDirection === 'horizontal'\n            ? 'vertical'\n            : 'horizontal';\n      } else if (this.moveDirection === 'horizontal') {\n        if (last.x !== next.x) {\n          link.getMiddlePoint().setPosition(next.x, first.y);\n        }\n      } else if (this.moveDirection === 'vertical') {\n        if (last.y !== next.y) {\n          link.getMiddlePoint().setPosition(first.x, next.y);\n        }\n      }\n    }\n  }\n\n  /**\n   * Sometimes, user input may be fast enough to skip the creation of\n   * a middle point. If this happens, we add it here.\n   */\n  if (\n    !link.hasMiddlePoint() &&\n    first.x !== next.x &&\n    first.y !== next.y\n  ) {\n    if (samePosition(first, last)) {\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\n    } else if (this.moveDirection === 'horizontal') {\n      link.addPoint(link.generatePoint(next.x, first.y), 1);\n    } else {\n      link.addPoint(link.generatePoint(first.x, next.y), 1);\n    }\n  }\n\n  link.getLastPoint().setPosition(next.x, next.y);\n\n  this.engine.repaintCanvas();\n}\n","import { Point } from '@projectstorm/geometry';\nimport {\n  AbstractDisplacementState,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\nimport {\n  NodeModel,\n  PortModel,\n} from '@projectstorm/react-diagrams-core';\n\nimport {\n  snap,\n  samePosition,\n  getLandingLink,\n  isPointOverLink,\n  sameX,\n  sameAxis,\n  closestPointToLink,\n} from './common';\nimport handleLinkDrag from './handleLinkDrag';\n\n/**\n * This State is responsible for handling bifurcation events.\n *\n * A bifurcation is just like a normal link, but instead of having a\n * source port, it has a source link (its `bifurcationSource`).\n *\n * There are three ways the user can create bifurcations:\n *\n * 1. By dragging an existing link into another existing link\n *    (link-to-link bifurcation)\n * 2. By dragging an existing link to any other point on the canvas,\n *    except on top of nodes\n *\n * If the drag start and end points are near each other, this action\n * will behave as a link selection.\n */\nexport default class BifurcateLinkState extends AbstractDisplacementState {\n  constructor() {\n    super({ name: 'bifurcate-link' });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          this.moveDirection = undefined;\n          this.hasStartedMoving = false;\n\n          this.source = this.engine.getMouseElement(event.event);\n          this.sourceBefore = this.getLinkPoints(this.source);\n          this.sourceEdited = false;\n\n          const position = this.snapPointToSourceLink(\n            this.engine.getRelativeMousePoint(event.event),\n            this.source,\n          );\n\n          if (this.source.isLocked()) {\n            this.eject();\n            return;\n          }\n\n          this.bifurcation = this.engine\n            .getLinkFactories()\n            .getFactory(this.source.getType())\n            .generateModel();\n\n          if (!this.bifurcation) {\n            this.eject();\n            return;\n          }\n\n          this.bifurcation.setBifurcationSource(this.source);\n          this.bifurcation.getFirstPoint().setPosition(position);\n          this.bifurcation.getLastPoint().setPosition(position);\n\n          this.bifurcation.setSelected(true);\n          this.engine.getModel().clearSelection();\n\n          this.source.setSelected(false);\n          this.source.addBifurcation(this.bifurcation);\n          this.engine.getModel().addLink(this.bifurcation);\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: event => {\n          // Link selection\n          if (this.isNearbySourcePosition()) {\n            this.cleanUp();\n            this.engine.getModel().clearSelection();\n            this.source.setSelected(true);\n            this.engine.repaintCanvas();\n            return;\n          }\n\n          const model = this.engine.getMouseElement(event.event);\n\n          // Disallows creation under nodes\n          if (model instanceof NodeModel) {\n            this.cleanUp();\n            this.engine.repaintCanvas();\n            return;\n          }\n\n          // Bifurcation connected to port\n          if (\n            model instanceof PortModel &&\n            model.isNewLinkAllowed()\n          ) {\n            this.bifurcation.setTargetPort(model);\n\n            model.reportPosition();\n            this.adjustBifurcationOverlayingSource(this.bifurcation);\n            this.engine.repaintCanvas();\n            this.fireEvent();\n            return;\n          }\n\n          // Bifurcation landing on another existing link\n          const landing = getLandingLink(\n            this.bifurcation,\n            this.engine,\n          );\n          if (landing) {\n            this.bifurcation.setBifurcationTarget(landing);\n            landing.addBifurcation(this.bifurcation);\n            landing.setSelected(true);\n          }\n\n          this.mergeWithBifurcation(\n            this.bifurcation.getBifurcationSource(),\n          );\n          this.adjustBifurcationOverlayingSource(this.bifurcation);\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = () => {\n    if (this.sourceEdited) {\n      this.engine.fireEvent(\n        {\n          before: this.sourceBefore,\n          after: this.getLinkPoints(this.source),\n        },\n        'linkChanged',\n      );\n    } else {\n      this.engine.fireEvent({ link: this.bifurcation }, 'linkAdded');\n    }\n  };\n\n  getLinkPoints(link) {\n    return {\n      id: link.getID(),\n      points: link.getPoints().map(point => point.getPosition()),\n      bifurcationTarget: link.getBifurcationTarget()\n        ? link.getBifurcationTarget().getID()\n        : null,\n    };\n  }\n\n  cleanUp() {\n    this.source.removeBifurcation(this.bifurcation);\n    this.bifurcation.remove();\n  }\n\n  /**\n   * Snaps a point to a point which is over the source link.\n   */\n  snapPointToSourceLink(position, source) {\n    const { gridSize } = this.engine.getModel().getOptions();\n    const sourcePoints = source.getPoints();\n\n    const closestCorner = this.getClosestCornerToPosition(\n      sourcePoints,\n      position,\n    );\n\n    if (closestCorner.distance < gridSize - 1) {\n      return new Point(\n        closestCorner.position.x,\n        closestCorner.position.y,\n      );\n    }\n\n    const closestPath = this.getClosestPathToPosition(\n      sourcePoints,\n      position,\n    );\n\n    const snappedPosition = snap(position, gridSize);\n\n    return new Point(\n      closestPath.axis === 'x'\n        ? closestPath.position\n        : snappedPosition.x,\n      closestPath.axis === 'y'\n        ? closestPath.position\n        : snappedPosition.y,\n    );\n  }\n\n  getClosestCornerToPosition(points, position) {\n    return points\n      .map(sourcePoint => ({\n        distance: Math.hypot(\n          position.x - sourcePoint.position.x,\n          position.y - sourcePoint.position.y,\n        ),\n        ...sourcePoint,\n      }))\n      .reduce((closest, point) =>\n        point.distance < closest.distance ? point : closest,\n      );\n  }\n\n  getPathPoints(points) {\n    return points\n      .map((point, i) => ({ from: points[i], to: points[i + 1] }))\n      .filter(tuple => tuple.to);\n  }\n\n  getPathDirections(points) {\n    return this.getPathPoints(points).map(pathPosition =>\n      sameX(pathPosition.from.position, pathPosition.to.position)\n        ? {\n            axis: 'x',\n            position: pathPosition.from.position.x,\n          }\n        : {\n            axis: 'y',\n            position: pathPosition.from.position.y,\n          },\n    );\n  }\n\n  getClosestPathToPosition(points, position) {\n    return this.getPathDirections(points)\n      .map(path => ({\n        distance: Math.abs(position[path.axis] - path.position),\n        ...path,\n      }))\n      .reduce((closest, path) =>\n        path.distance < closest.distance ? path : closest,\n      );\n  }\n\n  isNearbySourcePosition() {\n    return samePosition(\n      this.bifurcation.getFirstPosition(),\n      this.bifurcation.getLastPosition(),\n    );\n  }\n\n  /**\n   * Removes the bifurcation points which are causing the bifurcation\n   * to overlay its source link. Removes the whole bifurcation, in\n   * case it is completely overlayed by its source link.\n   */\n  adjustBifurcationOverlayingSource() {\n    const source = this.bifurcation.getBifurcationSource();\n\n    if (\n      samePosition(\n        this.bifurcation.getFirstPosition(),\n        source.getLastPosition(),\n      )\n    ) {\n      if (\n        isPointOverLink(this.bifurcation.getSecondPosition(), source)\n      ) {\n        this.bifurcation.removePoint(\n          this.bifurcation.getFirstPoint(),\n        );\n      }\n      return;\n    }\n\n    if (\n      isPointOverLink(this.bifurcation.getFirstPosition(), source) &&\n      isPointOverLink(this.bifurcation.getSecondPosition(), source)\n    ) {\n      if (!this.bifurcation.hasMiddlePoint()) {\n        this.bifurcation.remove();\n        source.removeBifurcation(this.bifurcation);\n        return;\n      }\n\n      this.bifurcation.removePoint(this.bifurcation.getFirstPoint());\n\n      if (\n        samePosition(\n          this.bifurcation.getFirstPosition(),\n          source.getMiddlePosition(),\n        )\n      ) {\n        if (\n          isPointOverLink(this.bifurcation.getLastPosition(), source)\n        ) {\n          this.bifurcation.remove();\n          source.removeBifurcation(this.bifurcation);\n          return;\n        }\n\n        this.bifurcation\n          .getFirstPoint()\n          .setPosition(source.getLastPosition());\n\n        this.mergeWithBifurcation(source);\n        return;\n      }\n    }\n\n    if (source.hasMiddlePoint()) {\n      if (\n        sameAxis(\n          this.bifurcation.getFirstPosition(),\n          source.getMiddlePosition(),\n          this.bifurcation.getSecondPosition(),\n        )\n      ) {\n        this.bifurcation\n          .getFirstPoint()\n          .setPosition(source.getMiddlePosition());\n      }\n    }\n  }\n\n  /**\n   * Merges a link with its bifurcations, when possible.\n   */\n  mergeWithBifurcation(link) {\n    const source = {\n      first: link.getFirstPosition(),\n      middle: link.getMiddlePosition(),\n      last: link.getLastPosition(),\n      secondLast: link.getSecondLastPosition(),\n    };\n\n    link.getBifurcations().forEach(b => {\n      if (isPointOverLink(link.getLastPosition(), b)) {\n        b.getFirstPoint().setPosition(link.getLastPosition());\n      }\n    });\n\n    const elegibleBifurcations = link.getBifurcations().filter(b => {\n      if (!samePosition(b.getFirstPosition(), source.last))\n        return false;\n\n      if (!link.hasMiddlePoint() && !b.hasMiddlePoint()) return true;\n\n      if (link.hasMiddlePoint() && b.hasMiddlePoint()) {\n        if (samePosition(source.middle, b.getMiddlePosition())) {\n          return true;\n        }\n        return false;\n      }\n\n      if (\n        sameAxis(\n          source.last,\n          source.secondLast,\n          b.getSecondPosition(),\n        )\n      )\n        return true;\n\n      return false;\n    });\n\n    const bifurcationToMerge = elegibleBifurcations[0];\n\n    if (!bifurcationToMerge) return;\n\n    const newMiddle = bifurcationToMerge.getSecondLastPosition();\n    const newLast = bifurcationToMerge.getLastPosition();\n\n    if (!link.hasMiddlePoint()) {\n      link.addPoint(link.generatePoint(newMiddle.x, newMiddle.y), 1);\n    }\n\n    link.getLastPoint().setPosition(newLast.x, newLast.y);\n\n    if (link.isStraight() && link.hasMiddlePoint()) {\n      link.removePoint(link.getMiddlePoint());\n    }\n\n    link.removeBifurcation(bifurcationToMerge);\n    const bifurcationTarget = bifurcationToMerge.getBifurcationTarget();\n    if (bifurcationTarget) {\n      link.setBifurcationTarget(bifurcationTarget);\n      bifurcationTarget.addBifurcation(link);\n    }\n    this.sourceEdited = true;\n    bifurcationToMerge.remove();\n\n    if (\n      samePosition(link.getFirstPosition(), link.getLastPosition())\n    ) {\n      link.remove();\n    } else {\n      link.setSelected(true);\n    }\n\n    this.adjustBifurcationPoints(link);\n  }\n\n  /**\n   * Adjusts points for bifurcations on which its first point is not\n   * over its source link.\n   */\n  adjustBifurcationPoints(link) {\n    const { gridSize } = this.engine.getModel().getOptions();\n\n    link\n      .getBifurcations()\n      .filter(b => !isPointOverLink(b.getFirstPosition(), link))\n      .forEach(b => {\n        const newSource = snap(\n          closestPointToLink(b.getFirstPosition(), link),\n          gridSize,\n        );\n\n        b.getFirstPoint().setPosition(newSource.x, newSource.y);\n\n        if (sameAxis(b.getFirstPosition(), b.getLastPosition()))\n          return;\n\n        // Adjust middle point aswell\n        if (b.hasMiddlePoint()) {\n          b.removePoint(b.getMiddlePoint());\n        }\n\n        if (\n          sameX(link.getFirstPosition(), link.getSecondPosition())\n        ) {\n          b.addPoint(\n            b.generatePoint(\n              b.getLastPosition().x,\n              b.getFirstPosition().y,\n            ),\n            1,\n          );\n        } else {\n          b.addPoint(\n            b.generatePoint(\n              b.getFirstPosition().x,\n              b.getLastPosition().y,\n            ),\n            1,\n          );\n        }\n      });\n  }\n\n  /**\n   * Updates bifurcation's points upon mouse move.\n   */\n  fireMouseMoved(event) {\n    handleLinkDrag.call(this, event, this.bifurcation);\n  }\n}\n","import {\n  State,\n  AbstractDisplacementState,\n} from '@projectstorm/react-canvas-core';\n\nexport default class DragCanvasState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'drag-canvas',\n    });\n  }\n\n  async activated(prev) {\n    super.activated(prev);\n    this.engine.getModel().clearSelection();\n    await this.engine.repaintCanvas(true);\n\n    // We can block layer rendering because we are only targeting the transforms\n    this.engine\n      .getModel()\n      .getLayers()\n      .forEach(layer => layer.allowRepaint(false));\n\n    this.initialCanvasX = this.engine.getModel().getOffsetX();\n    this.initialCanvasY = this.engine.getModel().getOffsetY();\n  }\n\n  deactivated(next: State) {\n    super.deactivated(next);\n\n    this.engine\n      .getModel()\n      .getLayers()\n      .forEach(layer => layer.allowRepaint(true));\n  }\n\n  fireMouseMoved(event) {\n    // Allow moving only with left clicks\n    if (event.event.nativeEvent.which !== 1) return;\n\n    this.engine\n      .getModel()\n      .setOffset(\n        this.initialCanvasX + event.displacementX,\n        this.initialCanvasY + event.displacementY,\n      );\n    this.engine.repaintCanvas();\n  }\n}\n","import {\n  AbstractDisplacementState,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\nimport {\n  NodeModel,\n  PortModel,\n} from '@projectstorm/react-diagrams-core';\n\nimport { nearby, getLandingLink } from './common';\nimport handleLinkDrag from './handleLinkDrag';\n\n/**\n * This State is responsible for handling link creation events.\n */\nexport default class DragNewLinkState extends AbstractDisplacementState {\n  constructor(options = {}) {\n    super({ name: 'drag-new-link' });\n\n    this.config = {\n      ...options,\n    };\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          this.moveDirection = undefined;\n          this.hasStartedMoving = false;\n\n          this.port = this.engine.getMouseElement(event.event);\n\n          if (\n            !(this.port instanceof PortModel) ||\n            this.port.isLocked()\n          ) {\n            this.eject();\n            return;\n          }\n\n          this.link = this.port.createLinkModel();\n\n          if (!this.link) {\n            this.eject();\n            return;\n          }\n\n          this.link.setSelected(true);\n          this.link.setSourcePort(this.port);\n          this.engine.getModel().clearSelection();\n          this.engine.getModel().addLink(this.link);\n          this.port.reportPosition();\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: event => {\n          const model = this.engine.getMouseElement(event.event);\n\n          // Disallows creation under nodes\n          if (\n            model instanceof NodeModel ||\n            this.isNearbySourcePort(event.event)\n          ) {\n            this.link.remove();\n            this.engine.repaintCanvas();\n          }\n\n          // Link connected to port\n          if (\n            model instanceof PortModel &&\n            this.port.canLinkToPort(model)\n          ) {\n            this.link.setTargetPort(model);\n            model.reportPosition();\n            this.engine.repaintCanvas();\n            this.fireEvent();\n            return;\n          }\n\n          // Link landing on another link\n          const landing = getLandingLink(this.link, this.engine);\n          if (landing) {\n            const reverse = this.engine\n              .getFactoryForLink(landing)\n              .generateModel();\n            reverse.setPoints(this.link.getPoints().reverse());\n            reverse.setTargetPort(this.link.getSourcePort());\n            reverse.setBifurcationSource(landing);\n\n            landing.addBifurcation(reverse);\n            landing.setSelected(true);\n\n            this.link.remove();\n            this.engine.getModel().addLink(reverse);\n            this.link = reverse;\n          }\n\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent = () => {\n    this.engine.fireEvent({ link: this.link }, 'linkAdded');\n  };\n\n  isNearbySourcePort(event) {\n    const point = this.engine.getRelativeMousePoint(event);\n\n    const sourcePort = this.link.getSourcePort();\n    const sourcePortSize = sourcePort.width;\n    const sourcePortPosition = sourcePort.getPosition();\n\n    return nearby(point, sourcePortPosition, sourcePortSize);\n  }\n\n  /**\n   * Updates link's points upon mouse move.\n   */\n  fireMouseMoved(event) {\n    handleLinkDrag.call(this, event, this.link);\n  }\n}\n","import { Point } from '@projectstorm/geometry';\nimport {\n  Action,\n  InputType,\n  BasePositionModel,\n  AbstractDisplacementState,\n} from '@projectstorm/react-canvas-core';\nimport { NodeModel } from '@projectstorm/react-diagrams-core';\n\nimport BaseModel from '../../BaseModel';\nimport {\n  snap,\n  samePosition,\n  sameX,\n  sameY,\n  closestPointToLink,\n} from './common';\n\n/**\n * This State handles node moving.\n *\n * When nodes are moved, all of its links (and all bifurcations from\n * or to this link) need to be rearranged.\n */\nexport default class MoveItemsState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'move-items',\n    });\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          if (this.engine.getModel().isLocked()) {\n            this.eject();\n            return;\n          }\n\n          this.lastDisplacement = new Point(0, 0);\n\n          this.element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          if (!this.element) {\n            this.eject();\n            return;\n          }\n\n          if (!this.element.isSelected()) {\n            this.engine.getModel().clearSelection();\n          }\n\n          this.linkDirections = this.getLinkDirections(this.element);\n\n          this.element.setSelected(true);\n          this.engine.repaintCanvas();\n\n          this.nodesBefore = this.getNodesPositions();\n          this.linksBefore = this.getLinksPoints();\n        },\n      }),\n    );\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_UP,\n        fire: () => {\n          if (\n            this.lastDisplacement.x === 0 &&\n            this.lastDisplacement.y === 0\n          ) {\n            return;\n          }\n\n          this.fireEvent();\n        },\n      }),\n    );\n  }\n\n  getNodesPositions = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => model instanceof BaseModel)\n      .map(node => ({\n        id: node.getID(),\n        position: node.getPosition(),\n      }));\n\n  getLinksPoints = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(model => model instanceof BaseModel)\n      .map(node => node.getAllLinks())\n      .flat()\n      .map(link => ({\n        id: link.getID(),\n        points: link.getPoints().map(point => point.getPosition()),\n      }));\n\n  /**\n   * Event is fired to be on the command manager, so the user can undo\n   * and redo it.\n   */\n  fireEvent() {\n    this.engine.fireEvent(\n      {\n        nodes: {\n          before: this.nodesBefore,\n          after: this.getNodesPositions(),\n        },\n        links: {\n          before: this.linksBefore,\n          after: this.getLinksPoints(),\n        },\n      },\n      'entitiesMoved',\n    );\n  }\n\n  activated(previous) {\n    super.activated(previous);\n    this.initialPositions = {};\n  }\n\n  /**\n   * Gets all links from a given node, including all its bifurcations.\n   */\n  getLinksFromNode(node) {\n    if (!(node instanceof NodeModel)) return [];\n\n    return Object.values(node.getPorts())\n      .map(p => Object.entries(p.getLinks()))\n      .filter(entry => entry.length > 0)\n      .flat()\n      .map(([id, link]) => [\n        [id, link],\n        ...this.getBifurcatedLinks(link),\n      ])\n      .flat();\n  }\n\n  getBifurcatedLinks(link) {\n    return link\n      .getBifurcations()\n      .map(b => [[b.getID(), b], ...this.getBifurcatedLinks(b)])\n      .flat();\n  }\n\n  getLinkDirections(node) {\n    return this.getLinksFromNode(node).reduce(\n      (acc, [id, link]) => ({\n        ...acc,\n        [id]: this.getLinkDirection(link),\n      }),\n      {},\n    );\n  }\n\n  getLinkDirection(link) {\n    if (!link.hasMiddlePoint()) {\n      return null;\n    }\n\n    const first = link.getFirstPosition();\n    const middle = link.getMiddlePosition();\n\n    if (sameX(first, middle)) return 'vertical';\n    if (sameY(first, middle)) return 'horizontal';\n\n    return null;\n  }\n\n  fireMouseMoved(event) {\n    // Allow moving only with left clicks\n    if (event.event.nativeEvent.which !== 1) return;\n\n    const currentDisplacement = snap(\n      new Point(\n        event.virtualDisplacementX,\n        event.virtualDisplacementY,\n      ),\n      this.engine.getModel().getOptions().gridSize,\n    );\n\n    // Avoids rearranging everything before moving at least one grid\n    if (samePosition(currentDisplacement, this.lastDisplacement)) {\n      return;\n    }\n    this.lastDisplacement = currentDisplacement;\n\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .forEach(entity => {\n        if (entity instanceof BasePositionModel) {\n          this.moveEntity(entity, event);\n\n          if (entity instanceof NodeModel) {\n            this.adjustNodeLinks(entity);\n          }\n        }\n      });\n\n    this.engine.repaintCanvas();\n  }\n\n  moveEntity(entity, event) {\n    if (entity.isLocked()) {\n      return;\n    }\n\n    if (!this.initialPositions[entity.getID()]) {\n      this.initialPositions[entity.getID()] = {\n        point: entity.getPosition(),\n        item: entity,\n      };\n    }\n\n    const initial = this.initialPositions[entity.getID()].point;\n    const model = this.engine.getModel();\n\n    entity.setPosition(\n      model.getGridPosition(initial.x + event.virtualDisplacementX),\n      model.getGridPosition(initial.y + event.virtualDisplacementY),\n    );\n  }\n\n  adjustNodeLinks(node) {\n    Object.values(node.getPorts()).forEach(port =>\n      Object.values(port.getLinks()).forEach(this.adjustLinkPoints),\n    );\n  }\n\n  adjustLinkPoints = link => {\n    const first = link.getFirstPosition();\n    const last = link.getLastPosition();\n\n    if (\n      !link.hasMiddlePoint() &&\n      first.x !== last.x &&\n      first.y !== last.y\n    ) {\n      link.addPoint(link.generatePoint(first.x, last.y), 1);\n    } else if (link.hasMiddlePoint()) {\n      const linkDirection = this.linkDirections[link.getID()];\n\n      if (linkDirection === 'horizontal') {\n        link.getMiddlePoint().setPosition(last.x, first.y);\n      } else {\n        link.getMiddlePoint().setPosition(first.x, last.y);\n      }\n\n      const middle = link.getMiddlePosition();\n\n      if (samePosition(first, middle) || samePosition(middle, last)) {\n        link.removePoint(link.getMiddlePoint());\n      }\n    }\n\n    // Adjusts origin/target position from bifurcations of this link\n    this.adjustLinkBifurcations(link);\n  };\n\n  adjustLinkBifurcations(link) {\n    const bifurcations = link.getBifurcations();\n\n    bifurcations.forEach(bifurcation => {\n      this.adjustFirstAndLastPoints(bifurcation);\n\n      // Adjusts the points of this bifurcation (recursion)\n      this.adjustLinkPoints(bifurcation);\n    });\n  }\n\n  /**\n   * Assures that the first position on a bifurcation is still over\n   * the source link, and that the last position is still over the\n   * target link.\n   */\n  adjustFirstAndLastPoints(bifurcation) {\n    const { gridSize } = this.engine.getModel().getOptions();\n\n    const first = bifurcation.getFirstPoint();\n    const closestToFirst = snap(\n      closestPointToLink(\n        first.getPosition(),\n        bifurcation.getBifurcationSource(),\n      ),\n      gridSize,\n    );\n    first.setPosition(closestToFirst.x, closestToFirst.y);\n\n    if (bifurcation.getBifurcationTarget()) {\n      const last = bifurcation.getLastPoint();\n      const closestToLast = snap(\n        closestPointToLink(\n          last.getPosition(),\n          bifurcation.getBifurcationTarget(),\n        ),\n        gridSize,\n      );\n      last.setPosition(closestToLast.x, closestToLast.y);\n    }\n  }\n}\n","import { Rectangle } from '@projectstorm/geometry';\nimport {\n  AbstractDisplacementState,\n  SelectionLayerModel,\n} from '@projectstorm/react-canvas-core';\nimport {\n  LinkModel,\n  PointModel,\n} from '@projectstorm/react-diagrams-core';\n\n/**\n * This State handles selection box events.\n *\n * Link (and link points) selection is currently disabled.\n */\nexport default class SelectionBoxState extends AbstractDisplacementState {\n  constructor() {\n    super({\n      name: 'selection-box',\n    });\n  }\n\n  activated(previous) {\n    super.activated(previous);\n    this.layer = new SelectionLayerModel();\n    this.engine.getModel().addLayer(this.layer);\n  }\n\n  deactivated(next) {\n    super.deactivated(next);\n    this.layer.remove();\n    this.engine.repaintCanvas();\n  }\n\n  getBoxDimensions(event) {\n    const rel = this.engine.getRelativePoint(\n      event.event.clientX,\n      event.event.clientY,\n    );\n\n    return {\n      left:\n        rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n      top:\n        rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n      width: Math.abs(rel.x - this.initialXRelative),\n      height: Math.abs(rel.y - this.initialYRelative),\n      right:\n        rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n      bottom:\n        rel.y < this.initialYRelative ? this.initialYRelative : rel.y,\n    };\n  }\n\n  fireMouseMoved(event) {\n    this.layer.setBox(this.getBoxDimensions(event));\n\n    const relative = this.engine.getRelativeMousePoint({\n      clientX: this.initialX,\n      clientY: this.initialY,\n    });\n    if (event.virtualDisplacementX < 0) {\n      relative.x -= Math.abs(event.virtualDisplacementX);\n    }\n    if (event.virtualDisplacementY < 0) {\n      relative.y -= Math.abs(event.virtualDisplacementY);\n    }\n    const rect = new Rectangle(\n      relative,\n      Math.abs(event.virtualDisplacementX),\n      Math.abs(event.virtualDisplacementY),\n    );\n\n    if (!this.engine.getModel().isLocked()) {\n      this.engine\n        .getModel()\n        .getSelectionEntities()\n        .forEach(model => {\n          if (model.getBoundingBox) {\n            if (!this.allowSelection(model)) return;\n\n            const bounds = model.getBoundingBox();\n            if (\n              rect.containsPoint(bounds.getTopLeft()) &&\n              rect.containsPoint(bounds.getBottomRight())\n            ) {\n              model.setSelected(true);\n            } else {\n              model.setSelected(false);\n            }\n          }\n        });\n    }\n\n    this.engine.repaintCanvas();\n  }\n\n  allowSelection(model) {\n    return (\n      !(model instanceof LinkModel) && !(model instanceof PointModel)\n    );\n  }\n}\n","import {\n  State,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\n\nimport SelectionBoxState from './SelectionBoxState';\n\n/**\n * This State handles nodes selection.\n */\nexport default class SelectingState extends State {\n  constructor() {\n    super({\n      name: 'selecting',\n    });\n    this.keys = ['shift'];\n\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          const element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          // Go into a selection box on the canvas state\n          if (!element) {\n            this.transitionWithEvent(new SelectionBoxState(), event);\n          } else {\n            element.setSelected(true);\n            this.engine.repaintCanvas();\n          }\n        },\n      }),\n    );\n  }\n}\n","import {\n  State,\n  Action,\n  InputType,\n} from '@projectstorm/react-canvas-core';\nimport {\n  PortModel,\n  LinkModel,\n} from '@projectstorm/react-diagrams-core';\n\nimport BifurcateLinkState from './BifurcateLinkState';\nimport DragCanvasState from './DragCanvasState';\nimport DragNewLinkState from './DragNewLinkState';\nimport MoveItemsState from './MoveItemsState';\nimport SelectingState from './SelectingState';\n\n/**\n * This class defines custom handlers (called states) to respond to\n * clicking events on certain elements.\n */\nexport default class States extends State {\n  constructor() {\n    super({\n      name: 'diagram-states',\n    });\n\n    this.childStates = [new SelectingState()];\n    this.dragCanvas = new DragCanvasState();\n    this.dragNewLink = new DragNewLinkState();\n    this.bifurcateLink = new BifurcateLinkState();\n    this.dragItems = new MoveItemsState();\n\n    // Determine what was clicked on\n    this.registerAction(\n      new Action({\n        type: InputType.MOUSE_DOWN,\n        fire: event => {\n          const element = this.engine\n            .getActionEventBus()\n            .getModelForEvent(event);\n\n          // The canvas was clicked on, transition to the dragging canvas state\n          if (!element) {\n            this.transitionWithEvent(this.dragCanvas, event);\n          }\n          // Initiate dragging a new link\n          else if (element instanceof PortModel) {\n            this.transitionWithEvent(this.dragNewLink, event);\n          }\n          // Create a bifurcation\n          else if (element instanceof LinkModel) {\n            this.transitionWithEvent(this.bifurcateLink, event);\n          }\n          // Move items\n          else {\n            this.transitionWithEvent(this.dragItems, event);\n          }\n        },\n      }),\n    );\n  }\n}\n","import { Point } from '@projectstorm/geometry';\nimport createEngine, {\n  DiagramModel,\n} from '@projectstorm/react-diagrams';\n\nimport BaseModel from '../BaseModel';\nimport LinkFactory from '../Link/LinkFactory';\nimport PortFactory from '../Port/PortFactory';\nimport ClipboardAction from './actions/ClipboardAction';\nimport DeleteAction from './actions/DeleteAction';\nimport DuplicateAction from './actions/DuplicateAction';\nimport UndoRedoAction from './actions/UndoRedoAction';\nimport ZoomAction from './actions/ZoomAction';\nimport commandHandlers from './Command/commandHandlers';\nimport CommandManager from './Command/CommandManager';\nimport States from './states/States';\n\nexport default class DiagramEngine {\n  constructor(components, areShortcutsAllowed) {\n    this.components = components;\n    this.areShortcutsAllowed = areShortcutsAllowed;\n    this.locked = false;\n\n    this.initializeEngine();\n    this.initializeModel();\n  }\n\n  getEngine = () => this.engine;\n\n  getModel = () => this.engine.getModel();\n\n  /**\n   * Initialization methods\n   */\n  initializeEngine = () => {\n    this.engine = createEngine({\n      registerDefaultDeleteItemsAction: false,\n      registerDefaultZoomCanvasAction: false,\n    });\n\n    this.engine.commands = new CommandManager();\n    this.engine.registerListener(commandHandlers(this));\n\n    this.engine.getStateMachine().pushState(new States());\n\n    const actions = [\n      DuplicateAction,\n      ClipboardAction,\n      DeleteAction,\n      UndoRedoAction,\n      ZoomAction,\n    ];\n    actions.forEach(Action =>\n      this.engine\n        .getActionEventBus()\n        .registerAction(new Action(this.areShortcutsAllowed)),\n    );\n\n    this.engine.getPortFactories().registerFactory(new PortFactory());\n    this.engine.getLinkFactories().registerFactory(new LinkFactory());\n\n    this.registerComponents();\n  };\n\n  initializeModel = () => {\n    this.model = new DiagramModel();\n\n    this.model.setGridSize(15);\n    this.model.setLocked(false);\n    this.model.registerListener({\n      eventDidFire: event => {\n        const type = event.function;\n        if (type === 'offsetUpdated') this.adjustGridOffset(event);\n        if (type === 'zoomUpdated') this.adjustGridZoom(event);\n      },\n    });\n    this.realignGrid();\n\n    this.engine.setModel(this.model);\n  };\n\n  registerComponents = () => {\n    this.components.forEach(component => {\n      this.engine.getNodeFactories().registerFactory(component);\n    });\n  };\n\n  /**\n   * Serializing & deserializing methods\n   */\n  serialize = () => this.model.serialize();\n\n  load = circuit => {\n    this.engine.commands.clear();\n    this.model.deserializeModel(circuit, this.engine);\n    this.realignGrid();\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * Diagram locking methods\n   */\n  setLocked = locked => {\n    this.model.setLocked(locked);\n    this.locked = locked;\n  };\n\n  isLocked = () => this.locked;\n\n  /**\n   * Diagram painting methods\n   */\n  repaint = () => this.engine.repaintCanvas();\n\n  realignGrid = () => {\n    this.adjustGridOffset({\n      offsetX: this.model.getOffsetX(),\n      offsetY: this.model.getOffsetY(),\n    });\n\n    this.adjustGridZoom({\n      zoom: this.model.getZoomLevel(),\n    });\n  };\n\n  adjustGridOffset = ({ offsetX, offsetY }) => {\n    document.body.style.setProperty('--offset-x', `${offsetX}px`);\n    document.body.style.setProperty('--offset-y', `${offsetY}px`);\n  };\n\n  adjustGridZoom = ({ zoom }) => {\n    const { gridSize } = this.model.getOptions();\n    document.body.style.setProperty(\n      '--grid-size',\n      `${(gridSize * zoom) / 100}px`,\n    );\n  };\n\n  /**\n   * Component creation and configuration methods\n   */\n  handleComponentDrop = (event, component) => {\n    const { Model } = this.components.find(\n      c => c.type === component.type,\n    );\n\n    const getSnappedRelativeMousePoint = () => {\n      const { x, y } = this.engine.getRelativeMousePoint(event);\n      return new Point(\n        Math.round(x / 15) * 15,\n        Math.round(y / 15) * 15,\n      );\n    };\n\n    const point = event\n      ? getSnappedRelativeMousePoint(event)\n      : new Point(0, 0);\n\n    const node = new Model(component.type, component.configurations);\n    this.model.addNode(node);\n    node.setPosition(point);\n\n    this.engine.fireEvent({ nodes: [node] }, 'componentsAdded');\n\n    this.engine.repaintCanvas();\n  };\n\n  handleComponentEdit = (node, configurations) => {\n    const configurationsBefore = node.configurations;\n    const linksBefore = node.getAllLinks();\n\n    this.editComponentConfiguration(node, configurations);\n\n    this.engine.fireEvent(\n      {\n        node,\n        configurations: {\n          before: configurationsBefore,\n          after: node.configurations,\n        },\n        links: {\n          before: linksBefore,\n          after: node.getAllLinks(),\n        },\n      },\n      'componentEdited',\n    );\n\n    this.engine.repaintCanvas();\n  };\n\n  /**\n   * When the component configuration is changed, we reinitialize the\n   * given component with the given configurations.\n   *\n   * For simplicity's sake, if this configuration edit creates or\n   * removes a port, we delete all its links.\n   */\n  editComponentConfiguration = (node, configurations) => {\n    const portsBefore = node.getPorts();\n\n    // Resets configurations and ports for the node and reinitialize\n    node.configurations = configurations; // eslint-disable-line no-param-reassign\n    node.ports = {}; // eslint-disable-line no-param-reassign\n    node.initialize(configurations);\n\n    const hasNewPort = Object.values(node.getPorts()).some(\n      newPort => !portsBefore[newPort.getName()],\n    );\n    const hasRemovedPort = Object.values(portsBefore).some(\n      oldPort => !node.getPort(oldPort.getName()),\n    );\n\n    if (hasNewPort || hasRemovedPort) {\n      /**\n       * If there was any port added or removed, we need to remove all\n       * links connected to the edited component.\n       */\n      Object.values(portsBefore).forEach(port =>\n        Object.values(port.getLinks()).forEach(link => link.remove()),\n      );\n    } else {\n      /**\n       * If no port was neither added or removed, we need to map old\n       * port links to new ports\n       */\n      Object.values(portsBefore).forEach(portBefore => {\n        const newPort = node.getPort(portBefore.getName());\n        const link = Object.values(portBefore.getLinks())[0];\n        if (!link) return;\n        newPort.addLink(link);\n        if (portBefore === link.getSourcePort())\n          link.setSourcePort(newPort);\n        if (portBefore === link.getTargetPort())\n          link.setTargetPort(newPort);\n        portBefore.remove();\n      });\n    }\n  };\n\n  clearSelection = () =>\n    this.getEngine()\n      .getModel()\n      .clearSelection();\n\n  getSelectedNodes = () =>\n    this.engine\n      .getModel()\n      .getSelectedEntities()\n      .filter(entity => entity instanceof BaseModel);\n\n  fireAction = event =>\n    this.engine.getActionEventBus().fireAction({\n      event: {\n        ...event,\n        key: '',\n        preventDefault: () => {},\n        stopPropagation: () => {},\n      },\n    });\n\n  duplicateSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyD' });\n\n  cutSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyX' });\n\n  copySelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyC' });\n\n  pasteSelected = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyV' });\n\n  deleteSelected = () =>\n    this.fireAction({ type: 'keydown', code: 'Delete' });\n\n  undo = () =>\n    this.fireAction({ type: 'keydown', ctrlKey: true, code: 'KeyZ' });\n\n  redo = () =>\n    this.fireAction({\n      type: 'keydown',\n      ctrlKey: true,\n      shiftKey: true,\n      code: 'KeyZ',\n    });\n\n  zoomIn = ({ event }) =>\n    this.fireAction({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      type: 'wheel',\n      deltaY: +1,\n    });\n\n  zoomOut = ({ event }) =>\n    this.fireAction({\n      clientX: event.clientX,\n      clientY: event.clientY,\n      type: 'wheel',\n      deltaY: -1,\n    });\n\n  /**\n   * Simulation methods\n   */\n  synchronizeLink = (id, value) =>\n    this.getEngine()\n      .getModel()\n      .getLink(id)\n      .setValue(value);\n\n  synchronizeComponent = (id, diff) => {\n    const component = this.getEngine()\n      .getModel()\n      .getNode(id);\n\n    // Sets output port values\n    Object.entries(diff.output).forEach(([name, value]) =>\n      component.getPort(name).setValue(value),\n    );\n\n    // Sets custom properties\n    Object.entries(diff.properties).forEach(([name, value]) => {\n      component[name] = value;\n    });\n  };\n\n  clearAllValues = () => {\n    this.clearLinkValues();\n    this.clearPortValues();\n  };\n\n  clearLinkValues = () =>\n    this.getEngine()\n      .getModel()\n      .getLinks()\n      .forEach(link => link.setValue(null));\n\n  clearPortValues = () =>\n    this.getEngine()\n      .getModel()\n      .getNodes()\n      .forEach(node =>\n        Object.values(node.getPorts()).forEach(port =>\n          port.setValue(null),\n        ),\n      );\n}\n","import React from 'react';\n\nimport { PortWidget } from '@projectstorm/react-diagrams';\n\nimport styled from 'styled-components';\n\nconst Circle = styled.div`\n  width: 10px;\n  height: 10px;\n  border: var(--port-width) solid\n    ${props =>\n      props.link\n        ? 'var(--port-connected-border)'\n        : 'var(--port-unconnected-border)'};\n  border-radius: 100%;\n  background: ${props => props.port.getColor()};\n\n  &:hover {\n    background: var(--port-hover);\n  }\n`;\n\nexport default class Port extends PortWidget {\n  report() {\n    if (this.props.port) super.report();\n  }\n\n  componentDidUpdate() {\n    if (this.props.port) super.componentDidUpdate();\n  }\n\n  render() {\n    const { name, model, port, className = '' } = this.props;\n\n    if (!port) return null;\n\n    return (\n      <Circle\n        className={`port ${className}`}\n        data-name={name}\n        data-nodeid={model.getID()}\n        port={port}\n        link={port.getMainLink()}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst MAX_PORTS = 5;\n\n/**\n * Given a number of ports, returns an array with the port positions\n * symmetrically distributed.\n */\nexport const distributePorts = numPorts => {\n  if (numPorts === 2) return [1, 5];\n  if (numPorts === 3) return [1, 3, 5];\n  if (numPorts === 4) return [1, 2, 4, 5];\n\n  const isNumberOfPortsEven = numPorts % 2 === 0;\n  const closestEven = numPorts - (isNumberOfPortsEven ? 0 : 1);\n\n  let startAt = 0;\n  let length = MAX_PORTS;\n  if (numPorts > MAX_PORTS) {\n    startAt = Math.floor((MAX_PORTS - closestEven) / 2);\n    length = closestEven + 1;\n  }\n\n  const result = [...Array(length).keys()].map(i => i + startAt + 1);\n  if (isNumberOfPortsEven) {\n    result.splice(numPorts / 2, 1);\n  }\n  return result;\n};\n\nconst PortExtensionBar = styled.div`\n  position: absolute;\n  left: ${props => props.offsetX}px;\n  height: ${props => props.size}px;\n  width: 2px;\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  ${props => `${props.place}: 88px;`}\n`;\n\nexport const PortExtension = ({\n  selected,\n  portPositions,\n  offsetX = 1,\n}) => {\n  const lastPortPosition = portPositions[portPositions.length - 1];\n  if (lastPortPosition <= MAX_PORTS) return null;\n\n  const size = (lastPortPosition - MAX_PORTS) * 15;\n\n  return (\n    <>\n      <PortExtensionBar\n        selected={selected}\n        size={size}\n        place=\"top\"\n        offsetX={offsetX}\n      />\n      <PortExtensionBar\n        selected={selected}\n        size={size}\n        place=\"bottom\"\n        offsetX={offsetX}\n      />\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90 }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        transform=\"scale(0.26458333)\"\n        d=\"M 2 2 L 2 45 A 42.999999 42.999999 0 0 0 2 45.271484 L 2 88 L 45 88 A 42.999999 42.999999 0 0 0 88 45 A 42.999999 42.999999 0 0 0 45 2 L 44.728516 2 L 2 2 z \"\n      />\n    </g>\n  </svg>\n);\n\nconst AndWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n      />\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          model={model}\n          port={port}\n          engine={engine}\n          position={portPositions[i]}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default AndWidget;\n","import React from 'react';\n\nimport { Shape } from './AndWidget';\n\nconst AndIcon = () => <Shape size={30} />;\n\nexport default AndIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './AndIcon';\nimport model from './AndModel';\nimport widget from './AndWidget';\n\nexport default new Component({\n  type: 'And',\n  name: 'And',\n  description: 'Logic \"and\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 32,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class AndModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = parseInt(\n      configurations.INPUT_PORTS_NUMBER,\n      10,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out');\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input).every(value => value === 1) ? 1 : 0,\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'out') return 'right: -5px;';\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n    </g>\n  </svg>\n);\n\nconst BufferWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n      />\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default BufferWidget;\n","import React from 'react';\n\nimport { Shape } from './BufferWidget';\n\nconst BufferIcon = () => <Shape size={30} />;\n\nexport default BufferIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './BufferIcon';\nimport model from './BufferModel';\nimport widget from './BufferWidget';\n\nexport default new Component({\n  type: 'Buffer',\n  name: 'Buffer',\n  description: 'Simple buffer',\n  group: 'Logic gates',\n  configurations: [],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BufferModel extends BaseModel {\n  initialize() {\n    this.addInputPort('in');\n    this.addOutputPort('out');\n  }\n\n  step(input) {\n    return { out: input.in };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst Button = styled.button`\n  position: absolute;\n  border-radius: 50%;\n  width: 18px;\n  height: 18px;\n  outline: none;\n\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  background: linear-gradient(\n    225deg,\n    rgba(238, 0, 0, 1) 0%,\n    rgba(125, 20, 20, 1) 100%\n  );\n\n  :active {\n    border: 2px solid rgba(255, 255, 255, 0.5);\n    background: linear-gradient(\n      225deg,\n      rgba(125, 20, 20, 1) 0%,\n      rgba(238, 0, 0, 1) 100%\n    );\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -5px;\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 7.9374997 7.9375003\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"1\"\n  >\n    <g>\n      <rect\n        y=\"0.26458332\"\n        x=\"0.26458332\"\n        height=\"7.4083333\"\n        width=\"7.4083333\"\n      />\n    </g>\n  </svg>\n);\n\nconst ButtonWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n      <Button\n        onMouseDown={() => model.onClick()}\n        onMouseUp={() => model.onRelease()}\n      />\n    </Wrapper>\n  );\n};\n\nexport default ButtonWidget;\n","import React from 'react';\n\nimport { Shape } from './ButtonWidget';\n\nconst ButtonIcon = () => <Shape size={30} />;\n\nexport default ButtonIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ButtonIcon';\nimport model from './ButtonModel';\nimport widget from './ButtonWidget';\n\nexport default new Component({\n  type: 'Button',\n  name: 'Button',\n  description: 'Simple button',\n  group: 'Input & output',\n  configurations: [],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ButtonModel extends BaseModel {\n  initialize() {\n    this.addOutputPort('out');\n  }\n\n  onSimulationStart() {\n    this.emit({ out: 0 });\n  }\n\n  onClick() {\n    this.emit({ out: 1 });\n  }\n\n  onRelease() {\n    this.emit({ out: 0 });\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 30px;\n  height: 30px;\n\n  transition: 100ms linear;\n  .shape {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  right: -5px;\n`;\n\nexport const Shape = ({\n  size = 30,\n  output,\n  color,\n  periodMs,\n  animateTransition,\n}) => (\n  <svg\n    className=\"shape\"\n    height={size}\n    width={size}\n    viewBox=\"0 0 7.9374997 7.9375003\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"1\"\n  >\n    <g>\n      <rect\n        y=\"0.26458332\"\n        x=\"0.26458332\"\n        height=\"7.4083333\"\n        width=\"7.4083333\"\n      />\n    </g>\n    <path\n      stroke={color}\n      strokeWidth={0.75}\n      fill=\"none\"\n      style={{\n        transform: output === 0 ? 'rotateX(180deg)' : 'none',\n        transformOrigin: 'center',\n        transition: animateTransition\n          ? `calc(${periodMs}ms / 2 * 0.4) ease-in-out`\n          : 'none',\n      }}\n      d=\"M 1.8683545,4.4337648 V 6.14192 H 4.0062447 V 1.79558 h 2.0629007 v 1.7578226\"\n    />\n  </svg>\n);\n\nconst ClockWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n    periodMs,\n  } = model;\n\n  const out = model.getPort('out');\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={out}\n        engine={engine}\n      />\n      <Shape\n        output={out.getValue()}\n        color={out.getColor()}\n        periodMs={periodMs}\n        animateTransition={periodMs >= 500}\n      />\n    </Wrapper>\n  );\n};\n\nexport default ClockWidget;\n","import React from 'react';\n\nimport { Shape } from './ClockWidget';\n\nconst ClockIcon = () => <Shape size={30} />;\n\nexport default ClockIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './ClockIcon';\nimport model from './ClockModel';\nimport widget from './ClockWidget';\n\nexport default new Component({\n  type: 'Clock',\n  name: 'Clock',\n  description: 'Generates a clock signal',\n  group: 'Input & output',\n  configurations: [\n    {\n      name: 'FREQUENCY_HZ',\n      type: 'number',\n      default: 1,\n      label: 'Frequency (in Hz)',\n      step: 0.25,\n      min: 0.25,\n      max: 1000,\n      validate(value) {\n        if (value < this.min)\n          return `Frequency should be greater than ${this.min} Hz`;\n        if (value > this.max)\n          return `Frequency should be lesser than ${this.max} Hz`;\n        if (value % this.step !== 0)\n          return `Frequency should be divisible by ${this.step} Hz`;\n        return null;\n      },\n    },\n    {\n      name: 'HIGH_DURATION',\n      type: 'number',\n      default: 1,\n      label: 'High duration (in cycles)',\n      min: 1,\n      validate(value) {\n        if (value < this.min)\n          return `High duration should be greater than ${this.min}`;\n        return null;\n      },\n    },\n    {\n      name: 'LOW_DURATION',\n      type: 'number',\n      default: 1,\n      label: 'Low duration (in cycles)',\n      min: 1,\n      validate(value) {\n        if (value < this.min)\n          return `Low duration should be greater than ${this.min}`;\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class ClockModel extends BaseModel {\n  initialize(configurations) {\n    this.addOutputPort('out');\n\n    this.configurations = configurations;\n\n    this.output = 0;\n    this.emitInterval = null;\n    this.periodMs = 1000 / this.configurations.FREQUENCY_HZ;\n    this.highCount = 0;\n    this.lowCount = 0;\n  }\n\n  onSimulationStart() {\n    this.emit({ out: this.output });\n\n    this.emitInterval = setInterval(() => {\n      this.output = this.getNextOutput();\n      this.emit({ out: this.output });\n    }, this.periodMs / 2);\n  }\n\n  getNextOutput() {\n    const { HIGH_DURATION, LOW_DURATION } = this.configurations;\n\n    if (this.output === 1) {\n      this.highCount += 1;\n\n      if (this.highCount === HIGH_DURATION) {\n        this.highCount = 0;\n        return 0;\n      }\n\n      return 1;\n    }\n\n    this.lowCount += 1;\n\n    if (this.lowCount === LOW_DURATION) {\n      this.lowCount = 0;\n      return 1;\n    }\n\n    return 0;\n  }\n\n  onSimulationPause() {\n    clearInterval(this.emitInterval);\n  }\n\n  onSimulationStop() {\n    clearInterval(this.emitInterval);\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90 }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform=\"scale(0.26458333)\">\n      <path d=\"m 2,2 v 43 a 42.999999,42.999999 0 0 0 0,0.271484 V 88 H 45 A 42.999999,42.999999 0 0 0 88,45 42.999999,42.999999 0 0 0 45,2 h -0.271484 z\" />\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n    </g>\n  </svg>\n);\n\nconst NandWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.isSelected()}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n      />\n      {inputPorts.map((port, i) => (\n        <PositionedPort\n          key={port.getName()}\n          name={port.getName()}\n          model={model}\n          port={port}\n          engine={engine}\n          position={portPositions[i]}\n        />\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default NandWidget;\n","import React from 'react';\n\nimport { Shape } from './NandWidget';\n\nconst NandIcon = () => <Shape size={30} />;\n\nexport default NandIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NandIcon';\nimport model from './NandModel';\nimport widget from './NandWidget';\n\nexport default new Component({\n  type: 'Nand',\n  name: 'Nand',\n  description: 'Logic \"not and\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 32,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NandModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = parseInt(\n      configurations.INPUT_PORTS_NUMBER,\n      10,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out');\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input).every(value => value === 1) ? 0 : 1,\n    };\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g transform=\"scale(0.26458333)\">\n      <path d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\" />\n      <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst NorWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            model={model}\n            port={port}\n            engine={engine}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default NorWidget;\n","import React from 'react';\n\nimport { Shape } from './NorWidget';\n\nconst NorIcon = () => <Shape size={30} />;\n\nexport default NorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NorIcon';\nimport model from './NorModel';\nimport widget from './NorWidget';\n\nexport default new Component({\n  type: 'Nor',\n  name: 'Nor',\n  description: 'Logic \"not or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 32,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class NorModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = parseInt(\n      configurations.INPUT_PORTS_NUMBER,\n      10,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out');\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input).some(value => value === 1) ? 0 : 1,\n    };\n  }\n}\n","import React from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 45px;\n  height: 30px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n  ${props => {\n    if (props.name === 'in') return 'left: -5px;';\n    if (props.name === 'out') return 'right: -5px;';\n    return '';\n  }}\n`;\n\nexport const Shape = ({ size = 30 }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"11 0 45.0 45.0\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path d=\"M 1.0207771,1.6492624 V 43.357967 L 42.724327,22.649262 Z\" />\n      <circle r=\"8\" cy=\"22\" cx=\"51\" />\n    </g>\n  </svg>\n);\n\nconst NotWidget = props => {\n  const { model, engine } = props;\n  const {\n    options: { selected },\n  } = model;\n\n  return (\n    <Wrapper selected={selected}>\n      <PositionedPort\n        name=\"in\"\n        model={model}\n        port={model.getPort('in')}\n        engine={engine}\n      />\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape />\n    </Wrapper>\n  );\n};\n\nexport default NotWidget;\n","import React from 'react';\n\nimport { Shape } from './NotWidget';\n\nconst NotIcon = () => <Shape size={30} />;\n\nexport default NotIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './NotIcon';\nimport model from './NotModel';\nimport widget from './NotWidget';\n\nexport default new Component({\n  type: 'Not',\n  name: 'Not',\n  description: 'Negation component',\n  group: 'Logic gates',\n  configurations: [],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class BufferModel extends BaseModel {\n  initialize() {\n    this.addInputPort('in');\n    this.addOutputPort('out');\n  }\n\n  step(input) {\n    return { out: input.in === 1 ? 0 : 1 };\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 45 C 68.748245,88.000001 88.005576,45.650843 88,45 87.994195,44.322314 68.748245,1.9999989 45,2 h -0.271484 z\"\n        transform=\"scale(0.26458333)\"\n      />\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst OrWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            model={model}\n            port={port}\n            engine={engine}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default OrWidget;\n","import React from 'react';\n\nimport { Shape } from './OrWidget';\n\nconst OrIcon = () => <Shape size={30} />;\n\nexport default OrIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './OrIcon';\nimport model from './OrModel';\nimport widget from './OrWidget';\n\nexport default new Component({\n  type: 'Or',\n  name: 'Or',\n  description: 'Logic \"or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 32,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class OrModel extends BaseModel {\n  initialize(configurations) {\n    const INPUT_PORTS_NUMBER = parseInt(\n      configurations.INPUT_PORTS_NUMBER,\n      10,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out');\n  }\n\n  step(input) {\n    return {\n      out: Object.values(input).some(value => value === 1) ? 1 : 0,\n    };\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 105px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size + 15}\n    viewBox=\"0 0 27.781249 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        fill=\"none\"\n        style={{\n          transform:\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\n        }}\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\n      />\n      <g transform=\"scale(0.26458333)\">\n        <path\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\n          transform=\"translate(7)\"\n        />\n        <circle r=\"5.72056\" cy=\"45\" cx=\"94.27944\" />\n      </g>\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst XnorWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            model={model}\n            port={port}\n            engine={engine}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default XnorWidget;\n","import React from 'react';\n\nimport { Shape } from './XnorWidget';\n\nconst XnorIcon = () => <Shape size={30} />;\n\nexport default XnorIcon;\n","import { Component } from '@logossim/core';\n\nimport icon from './XnorIcon';\nimport model from './XnorModel';\nimport widget from './XnorWidget';\n\nexport default new Component({\n  type: 'Xnor',\n  name: 'Xnor',\n  description: 'Logic \"not exclusive or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 32,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\n      type: 'select',\n      default: 'ONE',\n      label: 'Multiple input behavior',\n      options: [\n        {\n          label: 'Detect when only one input is on',\n          value: 'ONE',\n        },\n        {\n          label: 'Detect when an odd number of inputs are on',\n          value: 'ODD',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class XnorModel extends BaseModel {\n  initialize(configurations) {\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\n\n    const INPUT_PORTS_NUMBER = parseInt(\n      configurations.INPUT_PORTS_NUMBER,\n      10,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out');\n  }\n\n  step(input) {\n    const numberOfOnInputs = Object.values(input).filter(\n      value => value === 1,\n    ).length;\n\n    switch (this.behavior) {\n      case 'ONE':\n        return { out: numberOfOnInputs === 1 ? 0 : 1 };\n      case 'ODD':\n        return { out: numberOfOnInputs % 2 === 1 ? 0 : 1 };\n      default:\n        return {};\n    }\n  }\n}\n","import React, { Fragment } from 'react';\n\nimport { Port } from '@logossim/core';\n\nimport styled from 'styled-components';\n\nimport { PortExtension, distributePorts } from '../portExtendUtils';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 90px;\n  height: 90px;\n\n  transition: 100ms linear;\n  svg {\n    fill: ${props =>\n      props.selected\n        ? 'var(--body-selected)'\n        : 'var(--body-unselected)'};\n    stroke: ${props =>\n      props.selected\n        ? 'var(--border-selected)'\n        : 'var(--border-unselected)'};\n  }\n`;\n\nconst PortExtensionConnector = styled.div`\n  position: absolute;\n  z-index: -1;\n\n  background: ${props =>\n    props.selected\n      ? 'var(--border-selected)'\n      : 'var(--border-unselected)'};\n\n  height: 2px;\n  width: 15px;\n\n  top: ${props => props.position * 15 - 1}px;\n  left: -2px;\n`;\n\nconst PositionedPort = styled(Port)`\n  position: absolute;\n\n  ${props => {\n    if (props.name === 'out') return '';\n    return `top: ${props.position * 15 - 5}px;`;\n  }}\n\n  ${props => {\n    if (props.name === 'out') return 'right: -5px';\n    return 'left: -5px';\n  }};\n`;\n\nexport const Shape = ({ size = 90, portPositions = [] }) => (\n  <svg\n    height={size}\n    width={size}\n    viewBox=\"0 0 23.812499 23.812501\"\n    fill=\"var(--body-unselected)\"\n    stroke=\"var(--border-unselected)\"\n    strokeWidth=\"var(--border-width)\"\n  >\n    <g>\n      <path\n        fill=\"none\"\n        style={{\n          transform:\n            'scale(0.284583, 0.284583) translate(-1px, -3px)',\n        }}\n        d=\"m 11.926664,1.1161165 c 5.50133,9.5176855 9.663162,25.9796645 9.66318,42.6065395 m 0,0 c 1.62e-4,18.330222 -4.950245,36.216284 -11.386335,45.249616\"\n      />\n      <g transform=\"translate(1.8657598)\">\n        <path\n          d=\"m 12.810547,2 c 5.50133,9.517685 8.779279,25.095781 8.779297,41.722656 C 21.590006,62.052878 17.611871,78.966668 11.175781,88 H 37.875 c 23.748245,0 43.005576,-42.349157 43,-43 -0.0058,-0.677686 -19.251755,-43 -43,-43 h -0.271484 z\"\n          transform=\"scale(0.26458333)\"\n        />\n      </g>\n    </g>\n    <g strokeWidth={0.5}>\n      {portPositions.includes(1) && (\n        <path d=\"M 4.8860442,4.1010415 H 0.38245295\" />\n      )}\n      {portPositions.includes(2) && (\n        <path d=\"M 5.3419835,8.0697915 H 0.38232292\" />\n      )}\n      {portPositions.includes(3) && (\n        <path d=\"M 5.5975927,12.038541 H 0.38232292\" />\n      )}\n      {portPositions.includes(4) && (\n        <path d=\"M 5.2516863,16.007291 H 0.38232292\" />\n      )}\n      {portPositions.includes(5) && (\n        <path d=\"M 4.3916654,19.976041 H 0.38232292\" />\n      )}\n    </g>\n  </svg>\n);\n\nconst XorWidget = props => {\n  const { model, engine } = props;\n\n  const inputPorts = Object.values(model.getInputPorts());\n  const portPositions = distributePorts(inputPorts.length);\n\n  return (\n    <Wrapper selected={model.options.selected}>\n      <PortExtension\n        selected={model.isSelected()}\n        portPositions={portPositions}\n        offsetX={12}\n      />\n      {inputPorts.map((port, i) => (\n        <Fragment key={port.getName()}>\n          <PositionedPort\n            name={port.getName()}\n            model={model}\n            port={port}\n            engine={engine}\n            position={portPositions[i]}\n          />\n          {(portPositions[i] < 1 || portPositions[i] > 5) && (\n            <PortExtensionConnector\n              selected={model.isSelected()}\n              position={portPositions[i]}\n            />\n          )}\n        </Fragment>\n      ))}\n      <PositionedPort\n        name=\"out\"\n        model={model}\n        port={model.getPort('out')}\n        engine={engine}\n      />\n      <Shape portPositions={portPositions} />\n    </Wrapper>\n  );\n};\n\nexport default XorWidget;\n","import React from 'react';\n\nimport { Shape } from './XorWidget';\n\nconst XorIcon = () => <Shape size={30} />;\n\nexport default XorIcon;\n","import And from './And/AndRegister';\nimport Buffer from './Buffer/BufferRegister';\nimport Button from './Button/ButtonRegister';\nimport Clock from './Clock/ClockRegister';\nimport Nand from './Nand/NandRegister';\nimport Nor from './Nor/NorRegister';\nimport Not from './Not/NotRegister';\nimport Or from './Or/OrRegister';\nimport Xnor from './Xnor/XnorRegister';\nimport Xor from './Xor/XorRegister';\n\nconst components = [\n  And,\n  Nand,\n  Or,\n  Nor,\n  Xor,\n  Xnor,\n  Buffer,\n  Not,\n  Button,\n  Clock,\n];\n\nexport default components;\n\nexport const groupedComponents = components.reduce(\n  (acc, component) => {\n    const group = acc.find(g => g.name === component.group);\n\n    if (group) group.components.push(component);\n    else acc.push({ name: component.group, components: [component] });\n\n    return acc;\n  },\n  [],\n);\n","import { Component } from '@logossim/core';\n\nimport icon from './XorIcon';\nimport model from './XorModel';\nimport widget from './XorWidget';\n\nexport default new Component({\n  type: 'Xor',\n  name: 'Xor',\n  description: 'Logic \"exclusive or\" gate',\n  group: 'Logic gates',\n  configurations: [\n    {\n      name: 'INPUT_PORTS_NUMBER',\n      type: 'number',\n      default: 2,\n      label: 'Number of input ports',\n      min: 2,\n      max: 32,\n      validate(value) {\n        if (value < this.min)\n          return `Minimum input ports is ${this.min}`;\n        if (value > this.max)\n          return `Maximum input ports is ${this.max}`;\n        return null;\n      },\n    },\n    {\n      name: 'MULTIPLE_INPUT_BEHAVIOR',\n      type: 'select',\n      default: 'ONE',\n      label: 'Multiple input behavior',\n      options: [\n        {\n          label: 'Detect when only one input is on',\n          value: 'ONE',\n        },\n        {\n          label: 'Detect when an odd number of inputs are on',\n          value: 'ODD',\n        },\n      ],\n    },\n  ],\n  model,\n  widget,\n  icon,\n});\n","import { BaseModel } from '@logossim/core';\n\nexport default class XorModel extends BaseModel {\n  initialize(configurations) {\n    this.behavior = configurations.MULTIPLE_INPUT_BEHAVIOR;\n\n    const INPUT_PORTS_NUMBER = parseInt(\n      configurations.INPUT_PORTS_NUMBER,\n      10,\n    );\n\n    for (let i = 0; i < INPUT_PORTS_NUMBER; i += 1) {\n      this.addInputPort(`in${i}`);\n    }\n    this.addOutputPort('out');\n  }\n\n  step(input) {\n    const numberOfOnInputs = Object.values(input).filter(\n      value => value === 1,\n    ).length;\n\n    switch (this.behavior) {\n      case 'ONE':\n        return { out: numberOfOnInputs === 1 ? 1 : 0 };\n      case 'ODD':\n        return { out: numberOfOnInputs % 2 === 1 ? 1 : 0 };\n      default:\n        return {};\n    }\n  }\n}\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  z-index: 2;\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  border: none;\n  border-radius: 100%;\n\n  background: orange;\n  box-shadow: inset 0 0 10px #ff8d00;\n\n  width: 60px;\n  height: 60px;\n  margin: 16px;\n\n  font-size: 2em;\n  line-height: 1em;\n  color: white;\n\n  transition: 0.5s ease-in-out;\n\n  &:disabled {\n    opacity: 10%;\n    cursor: not-allowed;\n    background: gray;\n    box-shadow: inset 0 0 10px black;\n  }\n`;\n\nconst ComponentSelectButton = ({ handleClick, disabled }) => (\n  <Container id=\"component-select-button\">\n    <Button\n      onClick={handleClick}\n      disabled={disabled}\n      data-for=\"tooltip\"\n      data-tip=\"Add component...\"\n      data-place=\"left\"\n    >\n      +\n    </Button>\n  </Container>\n);\n\nexport default ComponentSelectButton;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  z-index: 2;\n\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  border: none;\n  border-radius: 5px;\n  background: ${props => {\n    switch (props.color) {\n      case 'green':\n        return '#07d26b';\n      case 'orange':\n        return 'orange';\n      default:\n        return 'gray';\n    }\n  }};\n\n  color: white;\n  font-size: 1.2em;\n\n  min-width: 110px;\n  padding: 5px 20px;\n  margin: 5px;\n\n  transition: 0.5s ease-in-out;\n\n  &:disabled {\n    opacity: 10%;\n    cursor: not-allowed;\n    background: gray;\n  }\n`;\n\nconst HelpButton = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  background: rgba(255, 255, 255, 0.6);\n  border-radius: 50%;\n  border: 1px solid #6441a5;\n\n  width: 34px;\n  height: 34px;\n\n  margin: 5px;\n\n  color: #6441a5;\n  font-weight: bold;\n  font-size: 1.3em;\n\n  &:focus,\n  &:hover {\n    background: #6441a5;\n    border: 1px solid rgba(255, 255, 255, 0.6);\n    color: rgba(255, 255, 255, 0.6);\n  }\n`;\n\nconst HelpButtonMenu = styled.div`\n  position: absolute;\n  top: 50px;\n  transform: translateX(calc(17px + -50%));\n\n  display: flex;\n  flex-direction: column;\n\n  background: rgba(255, 255, 255, 0.6);\n  border: 1px solid #6441a5;\n  border-radius: 10px;\n  padding: 3px;\n\n  z-index: 3;\n`;\n\nconst HelpButtonMenuItem = styled.button`\n  font-size: 14px;\n  color: #222;\n  padding: 16px;\n  border: 0;\n  background: transparent;\n  border-bottom: ${props =>\n    props.last ? 'none' : '1px solid #6441a5'};\n\n  &:focus,\n  &:hover {\n    color: #6441a5;\n  }\n`;\n\nconst DiagramStateButtons = ({\n  handleClickSave,\n  handleClickLoad,\n  handleClickKeyboardShortcuts,\n  handleClickRedoTour,\n  handleClickAbout,\n  disabled,\n}) => {\n  const helpButtonRef = useRef();\n  const helpMenuRef = useRef();\n  const [isHelpMenuOpen, setHelpMenuOpen] = useState(false);\n\n  const handleToggleHelpMenu = () => setHelpMenuOpen(!isHelpMenuOpen);\n  const handleClickAway = event => {\n    if (\n      helpMenuRef.current &&\n      !helpMenuRef.current.contains(event.target) &&\n      helpButtonRef.current &&\n      !helpButtonRef.current.contains(event.target)\n    ) {\n      handleToggleHelpMenu();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickAway);\n    return () =>\n      document.removeEventListener('mousedown', handleClickAway);\n  });\n\n  return (\n    <Container>\n      <HelpButton\n        id=\"help-button\"\n        ref={helpButtonRef}\n        onClick={handleToggleHelpMenu}\n      >\n        <span>?</span>\n      </HelpButton>\n      {isHelpMenuOpen && (\n        <HelpButtonMenu ref={helpMenuRef}>\n          <HelpButtonMenuItem\n            onClick={() => {\n              handleClickKeyboardShortcuts();\n              handleToggleHelpMenu();\n            }}\n          >\n            Keyboard shortcuts\n          </HelpButtonMenuItem>\n          <HelpButtonMenuItem\n            onClick={() => {\n              handleClickRedoTour();\n              handleToggleHelpMenu();\n            }}\n          >\n            Redo the tour\n          </HelpButtonMenuItem>\n          <HelpButtonMenuItem\n            onClick={() => {\n              handleClickAbout();\n              handleToggleHelpMenu();\n            }}\n            last\n          >\n            About\n          </HelpButtonMenuItem>\n        </HelpButtonMenu>\n      )}\n\n      <div id=\"save-load-buttons\">\n        <Button\n          color=\"green\"\n          onClick={handleClickSave}\n          disabled={disabled}\n        >\n          Save\n        </Button>\n        <Button\n          color=\"orange\"\n          onClick={handleClickLoad}\n          disabled={disabled}\n        >\n          Load\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default DiagramStateButtons;\n","import React from 'react';\n\nconst ArrowLeft = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"100 100 300 300\"\n  >\n    <polygon points=\"352,128.4 319.7,96 160,256 160,256 160,256 319.7,416 352,383.6 224.7,256 \" />\n  </svg>\n);\n\nexport default ArrowLeft;\n","import React from 'react';\n\nconst Chevron = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 48 48\">\n    <polygon points=\"5,30.9 8.1,34 24,18.1 39.9,34 43,30.9 24,12\" />\n  </svg>\n);\n\nexport default Chevron;\n","import React from 'react';\n\nconst Close = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 60.963 60.842\"\n  >\n    <path d=\"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611  c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611  l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369  C61.42,57.647,61.42,54.687,59.595,52.861z\" />\n  </svg>\n);\n\nexport default Close;\n","import React from 'react';\n\nconst Copy = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\" />\n    <path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\" />\n  </svg>\n);\n\nexport default Copy;\n","import React from 'react';\n\nconst Cut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"6\" cy=\"6\" r=\"3\" />\n    <circle cx=\"6\" cy=\"18\" r=\"3\" />\n    <line x1=\"20\" y1=\"4\" x2=\"8.12\" y2=\"15.88\" />\n    <line x1=\"14.47\" y1=\"14.48\" x2=\"20\" y2=\"20\" />\n    <line x1=\"8.12\" y1=\"8.12\" x2=\"12\" y2=\"12\" />\n  </svg>\n);\n\nexport default Cut;\n","import React from 'react';\n\nconst Delete = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <polyline points=\"3 6 5 6 21 6\" />\n    <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n    <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" />\n    <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" />\n  </svg>\n);\n\nexport default Delete;\n","import React from 'react';\n\nconst Duplicate = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={(size * 18) / 24}\n    viewBox=\"0 0 24 18\"\n    fill=\"none\"\n    stroke=\"none\"\n    strokeWidth=\"2\"\n  >\n    <g transform=\"translate(-678.000000, -2727.000000)\">\n      <g transform=\"translate(100.000000, 2626.000000)\">\n        <g transform=\"translate(578.000000, 98.000000)\">\n          <g transform=\"translate(0.000000, 0.000000)\">\n            <polygon points=\"0 0 24 0 24 24 0 24\" />\n            <path\n              d=\"M15,8 C14.45,8 14,8.45 14,9 L14,11 L12,11 C11.45,11 11,11.45 11,12 C11,12.55 11.45,13 12,13 L14,13 L14,15 C14,15.55 14.45,16 15,16 C15.55,16 16,15.55 16,15 L16,13 L18,13 C18.55,13 19,12.55 19,12 C19,11.45 18.55,11 18,11 L16,11 L16,9 C16,8.45 15.55,8 15,8 Z M2,12 C2,9.42 3.4,7.17 5.48,5.96 C5.8,5.77 6.01,5.45 6.01,5.08 C6.01,4.31 5.17,3.83 4.5,4.22 C1.82,5.78 0,8.68 0,12 C0,15.32 1.82,18.22 4.5,19.78 C5.17,20.17 6.01,19.69 6.01,18.92 C6.01,18.55 5.8,18.23 5.48,18.04 C3.4,16.83 2,14.58 2,12 Z M15,3 C10.04,3 6,7.04 6,12 C6,16.96 10.04,21 15,21 C19.96,21 24,16.96 24,12 C24,7.04 19.96,3 15,3 Z M15,19 C11.14,19 8,15.86 8,12 C8,8.14 11.14,5 15,5 C18.86,5 22,8.14 22,12 C22,15.86 18.86,19 15,19 Z\"\n              fill={color}\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Duplicate;\n","import React from 'react';\n\nconst Paste = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    fill={color}\n    viewBox=\"0 0 512.001 512.001\"\n  >\n    <g>\n      <g>\n        <g>\n          <path\n            d=\"M481,371c11.046,0,20-8.954,20-20v-92c0-33.084-26.916-60-60-60h-39v-79c0-44.112-35.888-80-80-80h-47.533\n\t\t\t\tc-7.739-23.749-29.864-40-55.16-40h-25.614c-25.296,0-47.421,16.251-55.16,40H91c-44.112,0-80,35.888-80,80v312\n\t\t\t\tc0,44.112,35.888,80,80,80h88c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H91c-22.056,0-40-17.944-40-40V120\n\t\t\t\tc0-22.056,17.944-40,40-40h2v59c0,11.046,8.954,20,20,20h189c11.046,0,20-8.954,20-20V80c22.056,0,40,17.944,40,40v79h-65.007\n\t\t\t\tC263.914,199,237,225.913,237,258.993v193.015c0,33.08,26.916,59.993,60.01,59.993L441,511.926c33.084,0,60-26.913,60-59.992\n\t\t\t\tc0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20c0,11.024-8.972,19.992-20.01,19.992L297,472c-11.028,0-20-8.969-20-19.993\n\t\t\t\tV258.993c0-11.024,8.969-19.993,19.993-19.993H441c11.028,0,20,8.972,20,20v92C461,362.046,469.955,371,481,371z M282,119H133V80\n\t\t\t\th21c9.177,0,17.177-6.246,19.403-15.149l2.798-11.194C178.211,45.616,185.404,40,193.693,40h25.614\n\t\t\t\tc8.289,0,15.481,5.616,17.492,13.657l2.798,11.194C241.823,73.754,249.823,80,259,80h23V119z\"\n          />\n          <path\n            d=\"M401,279h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,287.954,412.047,279,401,279z\"\n          />\n          <path\n            d=\"M401,349h-64c-11.046,0-20,8.954-20,20c0,11.046,8.954,20,20,20h64c11.046,0,20-8.954,20-20\n\t\t\t\tC421,357.954,412.047,349,401,349z\"\n          />\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default Paste;\n","import React from 'react';\n\nconst Pause = ({ size = 16, color = '#ffb100' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M395,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,395,512Z\" />\n    <path d=\"M117,512a73.14,73.14,0,0,1-73.14-73.14V73.14a73.14,73.14,0,1,1,146.29,0V438.86A73.14,73.14,0,0,1,117,512Z\" />\n  </svg>\n);\n\nexport default Pause;\n","import React from 'react';\n\nconst Play = ({ size = 16, color = '#008000' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M60.54,512c-17.06,0-30.43-13.86-30.43-31.56V31.55C30.12,13.86,43.48,0,60.55,0A32.94,32.94,0,0,1,77,4.52L465.7,229c10.13,5.85,16.18,16,16.18,27s-6,21.2-16.18,27L77,507.48A32.92,32.92,0,0,1,60.55,512Z\" />\n  </svg>\n);\n\nexport default Play;\n","import React from 'react';\n\nconst Redo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m431 481c0 11.046-8.954 20-20 20h-66c-11.046 0-20-8.954-20-20s8.954-20 20-20h66c11.046 0 20 8.954 20 20zm63.358-352.994-112.284-111.215c-7.848-7.773-20.511-7.713-28.284.135s-7.712 20.511.135 28.284l106.808 105.79h-285.733c-96.495 0-175 78.505-175 175s78.505 175 175 175h69c11.046 0 20-8.954 20-20s-8.954-20-20-20h-69c-74.439 0-135-60.561-135-135s60.561-135 135-135h284.836l-105.037 105.917c-7.778 7.843-7.725 20.506.118 28.284 3.9 3.868 8.992 5.799 14.083 5.799 5.146 0 10.292-1.975 14.202-5.917l111.225-112.157c11.332-11.332 17.573-26.4 17.573-42.426s-6.241-31.094-17.642-42.494z\" />\n  </svg>\n);\n\nexport default Redo;\n","import React from 'react';\n\nconst Settings = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n    <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n  </svg>\n);\n\nexport default Settings;\n","import React from 'react';\n\nconst Stop = ({ size = 16, color = '#c53838' }) => (\n  <svg width={size} height={size} fill={color} viewBox=\"0 0 512 512\">\n    <path d=\"M 65.249771,0 A 65.248738,65.376306 0 0 0 0.413662,58.057582 h -0.18732 v 1.884685 A 65.248738,65.376306 0 0 0 0,65.377342 65.248738,65.376306 0 0 0 0.226342,70.796781 V 441.18757 A 65.248738,65.376306 0 0 0 0,446.62268 a 65.248738,65.376306 0 0 0 0.226342,5.41161 v 2.88566 H 0.530738 A 65.248738,65.376306 0 0 0 65.249771,512 a 65.248738,65.376306 0 0 0 2.44297,-0.0468 H 444.31507 a 65.248738,65.376306 0 0 0 2.43514,0.0468 65.248738,65.376306 0 0 0 2.44297,-0.0468 h 0.56977 v -0.024 a 65.248738,65.376306 0 0 0 61.70628,-57.00966 h 0.0312 v -0.22662 a 65.248738,65.376306 0 0 0 0.49952,-8.07049 65.248738,65.376306 0 0 0 -0.49952,-8.01579 V 67.011775 a 65.248738,65.376306 0 0 0 0.0234,-1.634433 65.248738,65.376306 0 0 0 -0.0234,-1.681351 v -5.638409 h -0.38247 A 65.248738,65.376306 0 0 0 456.2645,0.77420532 V 0 H 446.40678 446.2741 65.374651 Z\" />\n  </svg>\n);\n\nexport default Stop;\n","import React from 'react';\n\nconst Undo = ({ size = 16, color = 'gray' }) => (\n  <svg width={size} height={size} viewBox=\"0 0 512 512\" fill={color}>\n    <path d=\"m 81,481 c 0,11.046 8.954,20 20,20 h 66 c 11.046,0 20,-8.954 20,-20 0,-11.046 -8.954,-20 -20,-20 h -66 c -11.046,0 -20,8.954 -20,20 z M 17.642,128.006 129.926,16.791 c 7.848,-7.773 20.511,-7.713 28.284,0.135 7.773,7.848 7.712,20.511 -0.135,28.284 L 51.267,151 H 337 c 96.495,0 175,78.505 175,175 0,96.495 -78.505,175 -175,175 h -69 c -11.046,0 -20,-8.954 -20,-20 0,-11.046 8.954,-20 20,-20 h 69 c 74.439,0 135,-60.561 135,-135 0,-74.439 -60.561,-135 -135,-135 H 52.164 l 105.037,105.917 c 7.778,7.843 7.725,20.506 -0.118,28.284 -3.9,3.868 -8.992,5.799 -14.083,5.799 -5.146,0 -10.292,-1.975 -14.202,-5.917 L 17.573,212.926 C 6.241,201.594 0,186.526 0,170.5 0,154.474 6.241,139.406 17.642,128.006 Z\" />\n  </svg>\n);\n\nexport default Undo;\n","import React from 'react';\n\nconst ZoomIn = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"11\" y1=\"8\" x2=\"11\" y2=\"14\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomIn;\n","import React from 'react';\n\nconst ZoomOut = ({ size = 16, color = 'gray' }) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke={color}\n    strokeWidth=\"2\"\n  >\n    <circle cx=\"11\" cy=\"11\" r=\"8\" />\n    <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\" />\n    <line x1=\"8\" y1=\"11\" x2=\"14\" y2=\"11\" />\n  </svg>\n);\n\nexport default ZoomOut;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport { Play, Pause, Stop } from '../Icons';\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 16px;\n  left: 50%;\n  transform: translate(-50%, 0);\n\n  background: rgb(224, 224, 224);\n  background: linear-gradient(\n    0deg,\n    rgba(224, 224, 224, 1) 0%,\n    rgba(255, 255, 255, 1) 100%\n  );\n\n  border: 1px solid gray;\n  border-radius: 16px;\n\n  z-index: 2;\n\n  & > button {\n    border-right: 1px solid gray;\n    &:last-child {\n      border-right: none;\n    }\n  }\n`;\n\nconst Button = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'button',\n}))`\n  background: none;\n  border: none;\n\n  font-size: 1.2em;\n\n  min-width: 75px;\n  min-height: 60px;\n\n  &:disabled {\n    & > svg {\n      fill: #bfbfbf;\n    }\n  }\n`;\n\nconst SimulationControlButtons = ({\n  state,\n  handleClickStart,\n  handleClickPause,\n  handleClickStop,\n}) => (\n  <Container id=\"simulation-control-buttons\">\n    <Button\n      onClick={handleClickStart}\n      disabled={state === 'started'}\n      data-for=\"tooltip\"\n      data-tip=\"Start simulation\"\n    >\n      <Play />\n    </Button>\n    <Button\n      onClick={handleClickPause}\n      disabled={state === 'paused' || state === 'stopped'}\n      data-for=\"tooltip\"\n      data-tip=\"Pause simulation\"\n    >\n      <Pause />\n    </Button>\n    <Button\n      onClick={handleClickStop}\n      disabled={state === 'stopped'}\n      data-for=\"tooltip\"\n      data-tip=\"Stop simulation\"\n    >\n      <Stop />\n    </Button>\n  </Container>\n);\n\nexport default SimulationControlButtons;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  z-index: 3;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100vw;\n  height: 100vh;\n\n  background: rgba(0, 0, 0, 0.75);\n`;\n\nconst Window = styled.div`\n  width: 60vw;\n  height: 80vh;\n\n  max-width: 600px;\n  max-height: 800px;\n\n  background: white;\n\n  border: 1px solid black;\n  border-radius: 25px;\n\n  padding: 16px;\n\n  z-index: 4;\n`;\n\nconst Modal = ({ children }) => (\n  <Overlay>\n    <Window>{children}</Window>\n  </Overlay>\n);\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: space-between;\n\n  height: 50px;\n`;\n\nexport const Title = styled.h1`\n  flex-grow: 1;\n  font-size: 1.5em;\n\n  margin: 0;\n\n  align-self: center;\n  text-align: center;\n`;\n\nexport const Subtitle = styled.h2`\n  flex-grow: 1;\n  font-size: 1.2em;\n\n  margin: 0;\n\n  align-self: center;\n  text-align: center;\n`;\n\nexport const Content = styled.div`\n  padding-top: 32px;\n`;\n\nexport const IconButton = styled.button`\n  position: absolute;\n\n  flex-shrink: 0;\n\n  border: 1px solid gray;\n  border-radius: 25px;\n  width: 50px;\n  height: 50px;\n\n  ${props => {\n    if (props.left) return 'left: 0;';\n    return 'right: 0;';\n  }}\n\n  background: none;\n\n  :hover {\n    background: rgba(0, 0, 0, 0.05);\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 16px;\n\n  label {\n    font-size: 0.8em;\n    font-weight: bold;\n    text-transform: uppercase;\n    color: ${props => (props.error ? '#710606' : 'inherit')};\n\n    background: #eee;\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\n    border-radius: 8px;\n\n    position: relative;\n    top: 0.8em;\n\n    width: max-content;\n    margin-left: 15px;\n    padding: 0 8px;\n  }\n\n  select,\n  input {\n    background: white;\n    border: 1px solid ${props => (props.error ? '#c80a0a' : 'gray')};\n    border-radius: 25px;\n\n    font-size: 1.2em;\n\n    padding: 10px 0 5px 16px;\n  }\n`;\n\nconst Input = ({\n  // Formik\n  field,\n  // General\n  name,\n  label,\n  componentType,\n  type,\n  innerRef,\n  // Select\n  options = [],\n  // Number\n  step,\n  min,\n  max,\n}) => {\n  switch (type) {\n    case 'select':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <select id={field.name} ref={innerRef} {...field}>\n            {options.map(option => (\n              <option value={option.value} key={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </>\n      );\n    case 'number':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input\n            id={field.name}\n            ref={innerRef}\n            {...field}\n            step={step}\n            min={min}\n            max={max}\n            type=\"number\"\n          />\n        </>\n      );\n    case 'text':\n      return (\n        <>\n          <label htmlFor={name}>{label}</label>\n          <input\n            id={field.name}\n            ref={innerRef}\n            {...field}\n            type=\"text\"\n          />\n        </>\n      );\n    default:\n      throw new Error(\n        `[logossim] Invalid configuration type for ${componentType}: ${type}`,\n      );\n  }\n};\n\nconst ErrorMessage = styled.div`\n  font-size: 0.8em;\n  color: #c80a0a;\n\n  background: white;\n\n  position: relative;\n  bottom: 0.7em;\n\n  width: max-content;\n  padding: 0 8px;\n  margin: -15px auto auto auto;\n  transform: translateY(15px);\n`;\n\nconst ComponentConfigurationInput = props => {\n  const {\n    field: { name },\n    form: { errors },\n  } = props;\n\n  const error = errors[name];\n\n  return (\n    <Container error={error}>\n      <Input {...props} />\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </Container>\n  );\n};\n\nexport default ComponentConfigurationInput;\n","import React from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport styled from 'styled-components';\n\nconst engineStub = {\n  registerListener: () => {},\n  getCanvas: () => {},\n  getPortCoords: () => ({\n    getWidth: () => {},\n    getHeight: () => {},\n    getTopLeft: () => {},\n  }),\n  getModel: () => ({ isLocked: () => false }),\n};\n\nconst getTooltip = (error, disabled) => {\n  if (disabled) return '';\n  if (error) return 'Check form errors';\n  return 'Drag me!';\n};\n\nconst ErrorWidget = styled.div`\n  border: 1px dashed var(--value-error);\n  border-radius: 5px;\n  width: 30px;\n  height: 30px;\n`;\n\nconst DraggableComponent = ({\n  component: { type, Widget, Model },\n  configurations,\n  handleClose,\n  error,\n  disabled,\n}) => (\n  <div\n    draggable={!error && !disabled}\n    onDragStart={event => {\n      event.dataTransfer.setDragImage(\n        event.currentTarget.children[0],\n        0,\n        0,\n      );\n\n      event.dataTransfer.setData(\n        'component',\n        JSON.stringify({\n          type,\n          configurations,\n        }),\n      );\n\n      requestAnimationFrame(() => {\n        Tooltip.hide();\n        handleClose();\n      });\n    }}\n    data-for=\"tooltip\"\n    data-tip={getTooltip(error, disabled)}\n    data-place=\"bottom\"\n  >\n    {error ? (\n      <ErrorWidget />\n    ) : (\n      <Widget\n        engine={engineStub}\n        model={new Model(type, configurations)}\n      />\n    )}\n  </div>\n);\n\nexport default DraggableComponent;\n","import React, { useEffect, useRef } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport { Formik, Form, Field } from 'formik';\nimport styled from 'styled-components';\n\nimport { ArrowLeft, Close } from '../Icons';\nimport {\n  Header,\n  Title,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\nimport ComponentConfigurationInput from './ComponentConfigurationInput';\nimport DraggableComponent from './DraggableComponent';\n\nconst DragArea = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 200px;\n  margin-bottom: 32px;\n\n  box-shadow: ${props =>\n    `inset 0 0 20px rgba(${props.error ? 255 : 0}, 0, 0, 0.3)`};\n\n  background-image: ${props => `linear-gradient(\n      to right,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\n      transparent 1px,\n      transparent 15px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\n      transparent 16px,\n      transparent 30px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\n      transparent 31px\n    ),\n    linear-gradient(\n      to bottom,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.1) 1px,\n      transparent 1px,\n      transparent 15px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 15px,\n      transparent 16px,\n      transparent 30px,\n      rgba(${props.error ? 255 : 0}, 0, 0, 0.05) 30px,\n      transparent 31px\n    )`};\n  background-size: 45px 45px;\n  border-radius: 25px;\n\n  overflow: hidden;\n`;\n\nconst FormScroll = styled.div`\n  height: 375px;\n  overflow-y: auto;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n`;\n\nconst Hint = styled.span`\n  font-size: 0.8em;\n  font-style: italic;\n  align-self: center;\n  text-align: right;\n  margin-right: 10px;\n`;\n\nconst SubmitButton = styled.button.attrs(({ ...props }) => ({\n  ...props,\n  type: 'submit',\n}))`\n  border: none;\n  border-radius: 5px;\n  background: #07d26b;\n\n  color: white;\n  font-size: 1.2em;\n\n  width: 100%;\n  padding: 5px 20px;\n  margin: 5px;\n\n  :disabled {\n    background: #d22307;\n    cursor: not-allowed;\n  }\n`;\n\nconst getInitialValues = component =>\n  Object.fromEntries(\n    component.configurations.map(configuration => [\n      configuration.name,\n      configuration.default,\n    ]),\n  );\n\nconst getFormSubmitLabel = (isValid, editMode) => {\n  if (!isValid) return 'Check form errors';\n  if (editMode) return 'Edit component';\n  return 'Add to circuit';\n};\n\nconst ComponentConfiguration = ({\n  editMode,\n  component,\n  handleClose,\n  handleBack,\n  handleSubmit,\n}) => {\n  const firstInputRef = useRef();\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (firstInputRef.current) {\n      firstInputRef.current.focus();\n    } else {\n      buttonRef.current.focus();\n    }\n  });\n\n  useEffect(Tooltip.rebuild);\n\n  return (\n    <>\n      <Header>\n        {!editMode && (\n          <IconButton\n            left\n            onClick={handleBack}\n            data-for=\"tooltip\"\n            data-tip=\"Go back...\"\n            data-place=\"right\"\n          >\n            <ArrowLeft />\n          </IconButton>\n        )}\n        <Title>{editMode ? 'Edit' : 'Configure'} component</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content>\n        <Formik\n          initialValues={getInitialValues(component)}\n          onSubmit={values => {\n            handleSubmit(null, {\n              type: component.type,\n              configurations: values,\n            });\n            handleClose();\n          }}\n        >\n          {({ values, isValid }) => (\n            <Form>\n              <DragArea error={!isValid}>\n                <DraggableComponent\n                  component={component}\n                  configurations={values}\n                  handleClose={handleClose}\n                  error={!isValid}\n                  disabled={editMode}\n                />\n              </DragArea>\n\n              <FormScroll autoComplete=\"off\">\n                {component.configurations.map(\n                  (configuration, index) => (\n                    <Field\n                      key={configuration.name}\n                      component={ComponentConfigurationInput}\n                      innerRef={index === 0 ? firstInputRef : null}\n                      {...configuration}\n                      validate={\n                        configuration.validate\n                          ? value =>\n                              configuration.validate(value, values)\n                          : null\n                      }\n                    />\n                  ),\n                )}\n              </FormScroll>\n\n              <Footer>\n                {!editMode && (\n                  <Hint>(hint: you can also drag the component)</Hint>\n                )}\n                <SubmitButton disabled={!isValid} ref={buttonRef}>\n                  {getFormSubmitLabel(isValid, editMode)}\n                </SubmitButton>\n              </Footer>\n            </Form>\n          )}\n        </Formik>\n      </Content>\n    </>\n  );\n};\n\nexport default ComponentConfiguration;\n","import React, { useEffect, useCallback } from 'react';\n\nimport Modal from '../Modal/Modal';\nimport ComponentConfiguration from './ComponentConfiguration';\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst ComponentEdit = ({\n  isOpen,\n  components,\n  component,\n  handleClose,\n  handleComponentEdit,\n}) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  const factory = components.find(\n    c => c.type === component.options.type,\n  );\n\n  const edit = {\n    ...factory,\n    configurations: factory.configurations.map(configuration => ({\n      ...configuration,\n      default: component.configurations[configuration.name],\n    })),\n  };\n\n  return (\n    <Modal>\n      <ComponentConfiguration\n        editMode\n        handleClose={handleClose}\n        handleSubmit={(event, { configurations }) =>\n          handleComponentEdit(component, configurations)\n        }\n        component={edit}\n      />\n    </Modal>\n  );\n};\n\nexport default ComponentEdit;\n","import React, { useState } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Chevron } from '../Icons';\n\nconst Container = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 1.3em;\n`;\n\nconst HorizontalSeparator = styled.hr`\n  flex-grow: 1;\n  align-self: center;\n\n  margin: 16px;\n  border-top: 1px solid black;\n`;\n\nconst IconButton = styled.button`\n  background: none;\n  border: none;\n  width: 50px;\n\n  transform: ${props => (props.isOpen ? 'rotate(180deg)' : 'none')};\n`;\n\nconst ComponentsGrid = styled.div`\n  display: ${props => (props.isOpen ? 'grid' : 'none')};\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 8px;\n`;\n\nconst ComponentButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  padding: 8px;\n\n  background: rgba(0, 0, 0, 0.05);\n  border: 1px solid gray;\n  border-radius: 5px;\n\n  :hover {\n    background: rgba(0, 0, 0, 0.1);\n    border-style: dashed;\n  }\n`;\n\nconst ComponentTitle = styled.h2`\n  font-weight: normal;\n  font-size: 1.2em;\n`;\n\nconst ComponentIcon = styled.div`\n  margin-right: 16px;\n`;\n\nconst ComponentGroup = ({\n  name,\n  components,\n  handleComponentSelect,\n}) => {\n  const [isOpen, setOpen] = useState(true);\n\n  return (\n    <Container>\n      <Header onClick={() => setOpen(!isOpen)}>\n        <Title>{name}</Title>\n        <HorizontalSeparator />\n        <IconButton\n          left\n          isOpen={isOpen}\n          onClick={() => setOpen(!isOpen)}\n        >\n          <Chevron />\n        </IconButton>\n      </Header>\n      <ComponentsGrid isOpen={isOpen}>\n        {components.map(component => (\n          <ComponentButton\n            onClick={() => handleComponentSelect(component)}\n            key={component.name}\n            data-for=\"tooltip\"\n            data-tip={component.description}\n          >\n            <ComponentIcon>\n              <component.Icon />\n            </ComponentIcon>\n            <ComponentTitle>{component.name}</ComponentTitle>\n          </ComponentButton>\n        ))}\n      </ComponentsGrid>\n    </Container>\n  );\n};\n\nexport default ComponentGroup;\n","import React, { useState, useEffect } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport styled from 'styled-components';\n\nimport { Close } from '../Icons';\nimport {\n  Header,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\nimport ComponentGroup from './ComponentGroup';\n\nconst SearchBar = styled.input`\n  flex-grow: 1;\n\n  padding: 10px;\n  margin-right: 60px;\n  font-size: 1.5em;\n\n  border-radius: 25px;\n  border: 1px solid gray;\n\n  ::placeholder {\n    font-weight: 300;\n    color: #cfcfcf;\n  }\n`;\n\nconst ComponentSearch = ({\n  groups,\n  handleComponentSelect,\n  handleClose,\n}) => {\n  useEffect(Tooltip.rebuild);\n\n  const [filteredGroups, setFilteredGroups] = useState(groups);\n  const [searchText, setSearchText] = useState('');\n\n  const handleSearchChange = value => {\n    setSearchText(value);\n\n    if (!value) {\n      setFilteredGroups(groups);\n      return;\n    }\n\n    const like = new RegExp(`${value}.*`, 'i');\n\n    const newFilteredGroups = groups\n      .map(group => {\n        const hasAnyMatchingComponent = group.components.some(\n          component => component.name.match(like),\n        );\n\n        if (hasAnyMatchingComponent)\n          return {\n            ...group,\n            components: group.components.filter(component =>\n              component.name.match(like),\n            ),\n          };\n        return null;\n      })\n      .filter(group => group != null);\n\n    setFilteredGroups(newFilteredGroups);\n  };\n\n  const handleKeyDown = key => {\n    if (key === 'Escape') {\n      setSearchText('');\n      setFilteredGroups(groups);\n    }\n\n    if (\n      key === 'Enter' &&\n      searchText &&\n      filteredGroups.length > 0 &&\n      filteredGroups[0].components.length > 0\n    ) {\n      handleComponentSelect(filteredGroups[0].components[0]);\n    }\n  };\n\n  return (\n    <>\n      <Header>\n        <SearchBar\n          autoFocus\n          placeholder=\"Search components...\"\n          value={searchText}\n          onChange={({ target: { value } }) =>\n            handleSearchChange(value)\n          }\n          onKeyDown={({ key }) => handleKeyDown(key)}\n        />\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content>\n        {filteredGroups.map(({ name, components }) => (\n          <ComponentGroup\n            name={name}\n            components={components}\n            handleComponentSelect={handleComponentSelect}\n            key={name}\n          />\n        ))}\n      </Content>\n    </>\n  );\n};\n\nexport default ComponentSearch;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport Modal from '../Modal/Modal';\nimport ComponentConfiguration from './ComponentConfiguration';\nimport ComponentSearch from './ComponentSearch';\n\nconst closeOnEsc = (\n  { code },\n  { handleClose, setSelectedComponent },\n) => {\n  if (code !== 'Escape') return;\n  handleClose();\n  setSelectedComponent(null);\n};\n\nconst ComponentSelect = ({\n  isOpen,\n  groups,\n  handleClose,\n  handleComponentDrop,\n}) => {\n  const [selectedComponent, setSelectedComponent] = useState(null);\n  const callback = useCallback(\n    event => closeOnEsc(event, { handleClose, setSelectedComponent }),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      {selectedComponent ? (\n        <ComponentConfiguration\n          handleClose={() => {\n            handleClose();\n            setSelectedComponent(null);\n          }}\n          handleSubmit={handleComponentDrop}\n          handleBack={() => setSelectedComponent(null)}\n          component={selectedComponent}\n        />\n      ) : (\n        <ComponentSearch\n          handleClose={handleClose}\n          handleComponentSelect={setSelectedComponent}\n          groups={groups}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default ComponentSelect;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Container = styled.span`\n  display: inline-flex;\n  align-items: center;\n\n  height: ${props => props.size}px;\n  padding: 0 ${props => props.size / 4}px;\n  margin: 2px ${props => props.size / 8}px;\n\n  font-size: ${props => props.size / 2}px;\n  font-family: monospace;\n  color: #000000c4;\n\n  background: #ececec;\n  border-radius: 4px;\n  border: 1px solid #ffffff17;\n  box-shadow: inset 0 0 ${props => props.size / 4}px #0000000a;\n`;\n\nconst Key = ({ children, size = 16 }) => (\n  <Container size={size}>{children}</Container>\n);\n\nexport default Key;\n","import styled from 'styled-components';\n\nconst ContextMenuIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n`;\n\nexport default ContextMenuIconContainer;\n","import styled from 'styled-components';\n\nconst ContextMenuShortcutContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n  margin-left: 8px;\n`;\n\nexport default ContextMenuShortcutContainer;\n","import React from 'react';\nimport { Menu, Item, Separator } from 'react-contexify';\n\nimport {\n  Duplicate,\n  Copy,\n  Delete,\n  Paste,\n  Redo,\n  Settings,\n  Undo,\n  Cut,\n  ZoomIn,\n  ZoomOut,\n} from '../Icons';\nimport Key from '../Key/Key';\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\n\nconst ComponentContextMenu = ({\n  duplicateSelected,\n  cutSelected,\n  copySelected,\n  pasteSelected,\n  deleteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n  configureComponent,\n}) => (\n  <Menu id=\"component\">\n    <Item onClick={duplicateSelected}>\n      <ContextMenuIconContainer>\n        <Duplicate />\n      </ContextMenuIconContainer>\n      Duplicate\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>D</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={cutSelected}>\n      <ContextMenuIconContainer>\n        <Cut />\n      </ContextMenuIconContainer>\n      Cut\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>X</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={copySelected}>\n      <ContextMenuIconContainer>\n        <Copy />\n      </ContextMenuIconContainer>\n      Copy\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>C</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={pasteSelected}>\n      <ContextMenuIconContainer>\n        <Paste />\n      </ContextMenuIconContainer>\n      Paste\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>V</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={deleteSelected}>\n      <ContextMenuIconContainer>\n        <Delete />\n      </ContextMenuIconContainer>\n      Delete\n      <ContextMenuShortcutContainer>\n        <Key>Delete</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item onClick={zoomIn}>\n      <ContextMenuIconContainer>\n        <ZoomIn />\n      </ContextMenuIconContainer>\n      Zoom in\n    </Item>\n\n    <Item onClick={zoomOut}>\n      <ContextMenuIconContainer>\n        <ZoomOut />\n      </ContextMenuIconContainer>\n      Zoom out\n    </Item>\n\n    <Separator />\n\n    <Item onClick={undo}>\n      <ContextMenuIconContainer>\n        <Undo />\n      </ContextMenuIconContainer>\n      Undo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={redo}>\n      <ContextMenuIconContainer>\n        <Redo />\n      </ContextMenuIconContainer>\n      Redo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>SHIFT</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item\n      onClick={({ props: component }) =>\n        configureComponent(component)\n      }\n    >\n      <ContextMenuIconContainer>\n        <Settings />\n      </ContextMenuIconContainer>\n      Edit configurations...\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>E</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n  </Menu>\n);\n\nexport default ComponentContextMenu;\n","import React from 'react';\nimport { Menu, Item, Separator } from 'react-contexify';\n\nimport { Redo, Undo, Paste, ZoomIn, ZoomOut } from '../Icons';\nimport Key from '../Key/Key';\nimport ContextMenuIconContainer from './ContextMenuIconContainer';\nimport ContextMenuShortcutContainer from './ContextMenuShortcutContainer';\n\nconst DiagramContextMenu = ({\n  pasteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n}) => (\n  <Menu id=\"diagram\">\n    <Item onClick={pasteSelected}>\n      <ContextMenuIconContainer>\n        <Paste />\n      </ContextMenuIconContainer>\n      Paste\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>V</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Separator />\n\n    <Item onClick={zoomIn}>\n      <ContextMenuIconContainer>\n        <ZoomIn />\n      </ContextMenuIconContainer>\n      Zoom in\n    </Item>\n    <Item onClick={zoomOut}>\n      <ContextMenuIconContainer>\n        <ZoomOut />\n      </ContextMenuIconContainer>\n      Zoom out\n    </Item>\n\n    <Separator />\n\n    <Item onClick={undo}>\n      <ContextMenuIconContainer>\n        <Undo />\n      </ContextMenuIconContainer>\n      Undo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n\n    <Item onClick={redo}>\n      <ContextMenuIconContainer>\n        <Redo />\n      </ContextMenuIconContainer>\n      Redo\n      <ContextMenuShortcutContainer>\n        <Key>CTRL</Key>\n        <Key>SHIFT</Key>\n        <Key>Z</Key>\n      </ContextMenuShortcutContainer>\n    </Item>\n  </Menu>\n);\n\nexport default DiagramContextMenu;\n","import React from 'react';\n\nimport ComponentContextMenu from './ComponentContextMenu';\nimport DiagramContextMenu from './DiagramContextMenu';\n\nimport 'react-contexify/dist/ReactContexify.min.css';\n\nconst ContextMenus = ({\n  duplicateSelected,\n  cutSelected,\n  copySelected,\n  pasteSelected,\n  deleteSelected,\n  undo,\n  redo,\n  zoomIn,\n  zoomOut,\n  configureComponent,\n}) => (\n  <>\n    <DiagramContextMenu\n      pasteSelected={pasteSelected}\n      undo={undo}\n      redo={redo}\n      zoomIn={zoomIn}\n      zoomOut={zoomOut}\n    />\n    <ComponentContextMenu\n      duplicateSelected={duplicateSelected}\n      cutSelected={cutSelected}\n      copySelected={copySelected}\n      pasteSelected={pasteSelected}\n      deleteSelected={deleteSelected}\n      undo={undo}\n      redo={redo}\n      zoomIn={zoomIn}\n      zoomOut={zoomOut}\n      configureComponent={configureComponent}\n    />\n  </>\n);\n\nexport default ContextMenus;\n","import React, { useEffect, useCallback } from 'react';\nimport GitHubButton from 'react-github-button';\n\nimport styled from 'styled-components';\n\nimport { version } from '../../../package.json';\nimport { Close } from '../Icons';\nimport Modal from '../Modal/Modal';\nimport {\n  Header,\n  Title,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\n\nconst Version = styled.span`\n  font-weight: bold;\n  font-size: 1.1em;\n  margin-top: -32px;\n`;\n\nconst Divider = styled.hr`\n  width: 80%;\n  margin: 24px;\n  border-color: white;\n`;\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst HelpAbout = ({ isOpen, handleClose }) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <Header>\n        <Title>About</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content\n        style={{\n          paddingTop: 0,\n          marginTop: 16,\n          overflowY: 'auto',\n          height: 'calc(100% - 70px)',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/social.png`}\n            alt=\"logossim's logo\"\n            style={{ width: '75%' }}\n          />\n          <Version>Version {version}</Version>\n        </div>\n\n        <Divider />\n\n        <div style={{ margin: '0 32px' }}>\n          <p style={{ textAlign: 'center' }}>\n            If you want to know more about the project,{' '}\n            <a\n              href=\"https://github.com/renato-bohler/logossim\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              check us out on GitHub!\n            </a>\n          </p>\n          <GitHubButton\n            type=\"stargazers\"\n            namespace=\"renato-bohler\"\n            repo=\"logossim\"\n          />\n          <p style={{ textAlign: 'center' }}>\n            <strong>You can help us</strong> make logossim better! If\n            you know a little bit of web development, you can quite\n            easily develop new components to the application.\n          </p>\n        </div>\n\n        <Divider />\n\n        <div style={{ margin: '0 32px' }}>\n          <p style={{ textAlign: 'center' }}>\n            This is a project built by{' '}\n            <a\n              href=\"https://renato-bohler.github.io/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Renato Böhler\n            </a>{' '}\n            as an undegraduate thesis on Computer Engineering at{' '}\n            <a\n              href=\"http://www.utfpr.edu.br/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              UTFPR\n            </a>\n            .\n          </p>\n        </div>\n      </Content>\n    </Modal>\n  );\n};\n\nexport default HelpAbout;\n","import React, { useEffect, useCallback } from 'react';\n\nimport styled from 'styled-components';\n\nimport { Close } from '../Icons';\nimport Key from '../Key/Key';\nimport Modal from '../Modal/Modal';\nimport {\n  Header,\n  Title,\n  Subtitle,\n  Content,\n  IconButton,\n} from '../Modal/ModalContentLayout';\n\nconst closeOnEsc = ({ code }, handleClose) => {\n  if (code !== 'Escape') return;\n  handleClose();\n};\n\nconst TableContainer = styled.div`\n  display: flex;\n`;\n\nconst Table = styled.table`\n  flex: 1;\n  margin: 8px 0;\n`;\n\nconst TableColumn = styled.td`\n  padding: 8px;\n\n  border: 1px solid #5d2eb526;\n  border-radius: 8px;\n`;\n\nconst HelpKeyboardShortcuts = ({ isOpen, handleClose }) => {\n  const callback = useCallback(\n    event => closeOnEsc(event, handleClose),\n    [handleClose],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', callback);\n    return () => window.removeEventListener('keydown', callback);\n  }, [callback]);\n\n  if (!isOpen) return null;\n\n  return (\n    <Modal>\n      <Header>\n        <Title>Keyboard shortcuts</Title>\n        <IconButton\n          right\n          onClick={handleClose}\n          data-for=\"tooltip\"\n          data-tip=\"Close\"\n          data-place=\"left\"\n        >\n          <Close />\n        </IconButton>\n      </Header>\n\n      <Content\n        style={{\n          paddingTop: 16,\n          marginTop: 16,\n          overflowY: 'auto',\n          height: 'calc(100% - 70px)',\n        }}\n      >\n        <span>\n          <strong>Note:</strong> some of the actions may have two\n          shortcuts.\n        </span>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Circuit management\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Save</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>S</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Load</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>L</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SHIFT</Key>\n                  <Key size={32}>S</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Undo</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>Z</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Redo</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SHIFT</Key>\n                  <Key size={32}>Z</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>Y</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Component management\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Edit configurations</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>E</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Duplicate</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>D</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Delete</TableColumn>\n                <TableColumn>\n                  <Key size={32}>Delete</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Copy</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>C</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Paste</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>V</Key>\n                </TableColumn>\n              </tr>\n              <tr>\n                <TableColumn>Cut</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>X</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n\n        <Subtitle style={{ marginTop: 32 }}>\n          Simulation control\n        </Subtitle>\n        <TableContainer>\n          <Table>\n            <tbody>\n              <tr>\n                <TableColumn>Play</TableColumn>\n                <TableColumn>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Pause</TableColumn>\n                <TableColumn>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn />\n              </tr>\n              <tr>\n                <TableColumn>Stop</TableColumn>\n                <TableColumn>\n                  <Key size={32}>CTRL</Key>\n                  <Key size={32}>SPACE</Key>\n                </TableColumn>\n                <TableColumn>\n                  <Key size={32}>ESC</Key>\n                </TableColumn>\n              </tr>\n            </tbody>\n          </Table>\n        </TableContainer>\n      </Content>\n    </Modal>\n  );\n};\n\nexport default HelpKeyboardShortcuts;\n","export const DIMENSIONS = { width: 180, height: 135 };\n\n/**\n * Example circuit used to make the tour\n */\nexport default {\n  id: 'tour-circuit',\n  locked: false,\n  offsetX: 0,\n  offsetY: 0,\n  zoom: 100,\n  gridSize: 15,\n  layers: [\n    {\n      id: '4d94cbed-1005-4dc6-b0e3-44d71dc14380',\n      type: 'diagram-links',\n      isSvg: true,\n      transformed: true,\n      models: {\n        'clock-out-link': {\n          id: 'clock-out-link',\n          type: 'link',\n          selected: false,\n          source: 'clock',\n          sourcePort: 'clock-port',\n          target: 'and',\n          targetPort: 'and-port-in0',\n          points: [\n            {\n              id: 'bb7c0935-a272-45ea-b47a-f9b79fa7fac3',\n              type: 'point',\n              x: 30,\n              y: 15,\n            },\n            {\n              id: '2f339615-1c6c-450c-9862-06742ed3893f',\n              type: 'point',\n              x: 60,\n              y: 15,\n            },\n          ],\n          labels: [],\n          bifurcations: [],\n          bifurcationSource: null,\n          bifurcationTarget: null,\n          value: null,\n        },\n        'and-out-link': {\n          id: 'and-out-link',\n          type: 'link',\n          selected: false,\n          source: 'and',\n          sourcePort: 'and-port-out',\n          target: null,\n          targetPort: null,\n          points: [\n            {\n              id: 'e4916002-7182-4866-9df7-46473e7de8bc',\n              type: 'point',\n              x: 150,\n              y: 45,\n            },\n            {\n              id: 'd677077d-9750-4831-be02-566294c988b1',\n              type: 'point',\n              x: 180,\n              y: 45,\n            },\n          ],\n          labels: [],\n          bifurcations: [],\n          bifurcationSource: null,\n          bifurcationTarget: null,\n          value: null,\n        },\n        'button-out-link': {\n          id: 'button-out-link',\n          type: 'link',\n          selected: false,\n          source: 'button',\n          sourcePort: 'c241c69b-8e1a-45be-9982-4c96a537584f',\n          target: 'and',\n          targetPort: 'and-port-in1',\n          points: [\n            {\n              id: 'fbd656c6-6a36-4903-94b8-c715db34052d',\n              type: 'point',\n              x: 30,\n              y: 75,\n            },\n            {\n              id: 'f70cce22-3d5d-4257-9916-b602da9a901b',\n              type: 'point',\n              x: 60,\n              y: 75,\n            },\n          ],\n          labels: [],\n          bifurcations: ['not-in-link'],\n          bifurcationSource: null,\n          bifurcationTarget: null,\n          value: null,\n        },\n        'not-out-link': {\n          id: 'not-out-link',\n          type: 'link',\n          selected: false,\n          source: 'not',\n          sourcePort: 'not-port-out',\n          target: null,\n          targetPort: null,\n          points: [\n            {\n              id: 'ba84ed0f-78ed-43c2-93d8-cf907b91b5fd',\n              type: 'point',\n              x: 120,\n              y: 120,\n            },\n            {\n              id: '78a6e161-97c3-4a31-a46c-244469ac75ff',\n              type: 'point',\n              x: 180,\n              y: 120,\n            },\n          ],\n          labels: [],\n          bifurcations: [],\n          bifurcationSource: null,\n          bifurcationTarget: null,\n          value: null,\n        },\n        'not-in-link': {\n          id: 'not-in-link',\n          type: 'link',\n          selected: false,\n          source: null,\n          sourcePort: null,\n          target: 'not',\n          targetPort: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\n          points: [\n            {\n              id: 'fada8e3b-4b46-4a24-a7ec-e3ca3bab77ab',\n              type: 'point',\n              x: 45,\n              y: 75,\n            },\n            {\n              id: 'f31e71e6-5d72-4f17-9af1-c23bfd257980',\n              type: 'point',\n              x: 45,\n              y: 120,\n            },\n            {\n              id: '2e747ee3-1c90-4e95-a40b-f221eb0710b3',\n              type: 'point',\n              x: 75,\n              y: 120,\n            },\n          ],\n          labels: [],\n          bifurcations: [],\n          bifurcationSource: 'button-out-link',\n          bifurcationTarget: null,\n          value: null,\n        },\n      },\n    },\n    {\n      id: '9d30c1dd-e474-45b1-ad88-6b7739678ef3',\n      type: 'diagram-nodes',\n      isSvg: false,\n      transformed: true,\n      models: {\n        clock: {\n          id: 'clock',\n          type: 'Clock',\n          selected: false,\n          x: 0,\n          y: 0,\n          ports: [\n            {\n              id: 'clock-port',\n              type: 'Port',\n              selected: false,\n              x: 25,\n              y: 10,\n              name: 'out',\n              parentNode: 'clock',\n              links: ['clock-out-link'],\n              input: false,\n              value: null,\n            },\n          ],\n          configurations: {\n            FREQUENCY_HZ: 0.5,\n            HIGH_DURATION: 1,\n            LOW_DURATION: 1,\n          },\n        },\n        and: {\n          id: 'and',\n          type: 'And',\n          selected: false,\n          x: 60,\n          y: 0,\n          ports: [\n            {\n              id: 'and-port-in0',\n              type: 'Port',\n              selected: false,\n              x: 55,\n              y: 10,\n              name: 'in0',\n              parentNode: 'and',\n              links: ['clock-out-link'],\n              input: true,\n              value: null,\n            },\n            {\n              id: 'and-port-in1',\n              type: 'Port',\n              selected: false,\n              x: 55,\n              y: 70,\n              name: 'in1',\n              parentNode: 'and',\n              links: ['button-out-link'],\n              input: true,\n              value: null,\n            },\n            {\n              id: 'and-port-out',\n              type: 'Port',\n              selected: false,\n              x: 145,\n              y: 40,\n              name: 'out',\n              parentNode: 'and',\n              links: ['and-out-link'],\n              input: false,\n              value: null,\n            },\n          ],\n          configurations: { INPUT_PORTS_NUMBER: 2 },\n        },\n        button: {\n          id: 'button',\n          type: 'Button',\n          selected: false,\n          x: 0,\n          y: 60,\n          ports: [\n            {\n              id: 'c241c69b-8e1a-45be-9982-4c96a537584f',\n              type: 'Port',\n              selected: false,\n              x: 25,\n              y: 70,\n              name: 'out',\n              parentNode: 'button',\n              links: ['button-out-link'],\n              input: false,\n              value: null,\n            },\n          ],\n          configurations: {},\n        },\n        not: {\n          id: 'not',\n          type: 'Not',\n          selected: false,\n          x: 75,\n          y: 105,\n          ports: [\n            {\n              id: '589ba5d7-8c75-4c82-9068-a67c9b023f77',\n              type: 'Port',\n              selected: false,\n              x: 70,\n              y: 115,\n              name: 'in',\n              parentNode: 'not',\n              links: ['not-in-link'],\n              input: true,\n              value: null,\n            },\n            {\n              id: 'not-port-out',\n              type: 'Port',\n              selected: false,\n              x: 115,\n              y: 115,\n              name: 'out',\n              parentNode: 'not',\n              links: ['not-out-link'],\n              input: false,\n              value: null,\n            },\n          ],\n          configurations: {},\n        },\n      },\n    },\n  ],\n};\n","import React, { Component } from 'react';\nimport GitHubButton from 'react-github-button';\nimport Joyride, { ACTIONS, EVENTS } from 'react-joyride';\n\nimport styled, { keyframes } from 'styled-components';\n\nimport Key from '../Key/Key';\nimport bifurcation from './images/bifurcation.gif';\nimport contextMenu from './images/context-menu.gif';\nimport simulation from './images/simulation.gif';\nimport wire from './images/wire.gif';\nimport { DIMENSIONS } from './tourCircuit';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  55% {\n    background-color: rgba(42, 8, 69, 0.5);\n    transform: scale(1.2);\n  }\n`;\n\nconst Pulse = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  animation: ${pulse} 1s ease-in-out infinite;\n  background-color: ${props => props.color};\n  border: 1px solid rgba(42, 8, 69, 0.7);\n  border-radius: 50%;\n\n  height: ${props => props.size}px;\n  width: ${props => props.size}px;\n`;\n\nconst Beacon = React.forwardRef((props, ref) => (\n  <Pulse\n    size={30}\n    color=\"rgba(100, 65, 165, 0.3)\"\n    ref={ref}\n    {...props}\n  >\n    <Pulse size={20} color=\"rgba(100, 65, 165, 0.5)\" />\n  </Pulse>\n));\n\nconst imageStyle = {\n  alignSelf: 'center',\n  borderRadius: 25,\n  boxShadow: 'rgba(171, 171, 171, 0.38) 0px 13px 20px 0px',\n  marginBottom: 16,\n};\n\nexport default class Tour extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStep: 0,\n      steps: [\n        {\n          title: 'Welcome!',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <img\n                src={`${process.env.PUBLIC_URL}/social.png`}\n                alt=\"logossim's logo\"\n                style={{\n                  width: 300,\n                  height: 158,\n                  alignSelf: 'center',\n                }}\n              />\n              <p>\n                This is <strong>logossim</strong>: an open source\n                digital logic simulator, built for the web and to be\n                extensible.\n              </p>\n              <p>Would you like to take a quick tour?</p>\n            </div>\n          ),\n          target: 'body',\n          placement: 'center',\n          showProgress: false,\n          disableOverlayClose: false,\n          locale: {\n            skip: 'No, thanks',\n            next: 'Yes, please!',\n          },\n        },\n        {\n          target: '#tour-circuit-area-wrapper',\n          title: 'This is the circuit workstation',\n          content: (\n            <p>\n              Here&apos;s where you are going to draw your circuits\n            </p>\n          ),\n        },\n        {\n          target: '#component-select-button',\n          title: 'Adding components',\n          content: (\n            <span>\n              <p>And you&apos;ll start by adding some components.</p>\n              <p>\n                You can do it by clicking on this button, then\n                you&apos;ll see all available components, so you can\n                create awesome circuits...\n              </p>\n              <p>\n                <strong>Hint:</strong> use the\n                <Key size={24}>CTRL</Key>\n                <Key size={24}>A</Key> shortcut.\n              </p>\n            </span>\n          ),\n          placement: 'top',\n        },\n        {\n          target: '#tour-circuit-wrapper',\n          title: 'Adding components',\n          content: <p>... like this one, for example!</p>,\n          spotlightPadding: 30,\n        },\n        {\n          target: '#tour-circuit-wrapper',\n          title: 'Managing components',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                Notice that you can right click anywhere on the canvas\n                to access some handy commands, like duplicate, undo\n                &amp; redo and component configuration editing.\n              </p>\n              <img\n                src={contextMenu}\n                alt=\"Context menu example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 132,\n                }}\n              />\n            </div>\n          ),\n          spotlightPadding: 30,\n        },\n        {\n          target: '[data-linkid=\"clock-out-link\"]',\n          title: 'Wiring components',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                To wire components together, you can drag a\n                component&apos;s port onto another port.\n              </p>\n              <img\n                src={wire}\n                alt=\"Wiring components example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 178,\n                }}\n              />\n              <p>\n                <strong>Oh! Important note:</strong> you can select a\n                wire by clicking it, and delete it using the Delete\n                key.\n              </p>\n            </div>\n          ),\n          placement: 'top',\n          spotlightPadding: 45,\n        },\n        {\n          target: '[data-linkid=\"not-in-link\"]',\n          title: 'Wiring components',\n          content: (\n            <span\n              style={{ display: 'flex', flexDirection: 'column' }}\n            >\n              <p>\n                You can also drag a new wire from an existing wire.\n              </p>\n              <img\n                src={bifurcation}\n                alt=\"Bifurcating wires example video\"\n                style={{\n                  ...imageStyle,\n                  width: 268,\n                  height: 160,\n                }}\n              />\n              <p>\n                <strong>Another important note:</strong> you can leave\n                the wire with a loose end and connect it afterwards.\n              </p>\n            </span>\n          ),\n          placement: 'top',\n          spotlightPadding: 45,\n        },\n        {\n          target: '#simulation-control-buttons',\n          title: 'Simulation control',\n          content: (\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <p>\n                After wiring it all together, you just need to run the\n                simulation to test your ideas!\n              </p>\n              <img\n                src={simulation}\n                alt=\"Simulation execution example video\"\n                style={{\n                  ...imageStyle,\n                  width: 254,\n                  height: 194,\n                }}\n              />\n              <p>Useful shortcuts:</p>\n              <ul style={{ margin: 0 }}>\n                <li>\n                  <strong>Play/pause:</strong>\n                  <Key size={24}>SPACE</Key>\n                </li>\n                <li>\n                  <strong>Stop:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>SPACE</Key>\n                </li>\n              </ul>\n            </div>\n          ),\n          placement: 'top',\n        },\n        {\n          target: '#help-button',\n          title: 'Still need help?',\n          content: (\n            <span>\n              <p>\n                In case you need any assistance in the future, come\n                back to this help button. Here you&apos;ll find:\n              </p>\n              <ol style={{ lineHeight: '200%' }}>\n                <li>All keyboard shortcuts</li>\n                <li>More about the project</li>\n                <li>\n                  And this tour, if you feel like doing it another\n                  time\n                </li>\n              </ol>\n            </span>\n          ),\n        },\n        {\n          target: '#save-load-buttons',\n          title: 'By the way...',\n          content: (\n            <span>\n              <p>\n                After you&apos;ve done your amazing circuit,\n                don&apos;t forget that you can save it and reload it\n                later!\n              </p>\n              <p>Useful shortcuts:</p>\n              <ul style={{ margin: 0 }}>\n                <li>\n                  <strong>Save:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>S</Key>\n                </li>\n                <li>\n                  <strong>Load:</strong>\n                  <Key size={24}>CTRL</Key>\n                  <Key size={24}>L</Key>\n                </li>\n              </ul>\n            </span>\n          ),\n        },\n        {\n          target: 'body',\n          title: \"And that's all folks!\",\n          content: (\n            <div>\n              <p>\n                If you want to know more about the project,{' '}\n                <a\n                  href=\"https://github.com/renato-bohler/logossim\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  check us out on GitHub!\n                </a>\n              </p>\n              <GitHubButton\n                type=\"stargazers\"\n                namespace=\"renato-bohler\"\n                repo=\"logossim\"\n              />\n              <p>\n                <strong>You can help us</strong> make logossim better!\n                If you know a little bit of web development, you can\n                quite easily develop new components to the\n                application.\n              </p>\n            </div>\n          ),\n          placement: 'center',\n          showProgress: false,\n          showSkipButton: false,\n          disableOverlayClose: false,\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.recenterTourCircuit);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.recenterTourCircuit);\n  }\n\n  recenterTourCircuit = () => {\n    const { currentStep } = this.state;\n    const { run } = this.props;\n\n    if (!run) return;\n    if (currentStep < 3) return;\n\n    const { recenterCircuit } = this.props;\n    recenterCircuit();\n  };\n\n  callback = ({ type, action, index }) => {\n    const { setTourRunning, loadCircuit, clearCircuit } = this.props;\n\n    // Next step\n    if (type === EVENTS.STEP_AFTER) {\n      if (index === 2 && action === ACTIONS.NEXT) loadCircuit();\n      if (index === 3 && action === ACTIONS.PREV) clearCircuit();\n\n      this.setState({\n        currentStep: index + (action === ACTIONS.NEXT ? 1 : -1),\n      });\n    }\n\n    // Dismiss (skipping, closing or ending tour)\n    if (type === EVENTS.TOUR_END || action === ACTIONS.CLOSE) {\n      clearCircuit();\n      localStorage.setItem('tour-done', true);\n      setTourRunning(false);\n      this.setState({ currentStep: 0 });\n    }\n  };\n\n  render() {\n    const { steps, currentStep } = this.state;\n    const { run } = this.props;\n\n    return (\n      <>\n        <Joyride\n          run={run}\n          steps={steps}\n          stepIndex={currentStep}\n          continuous\n          scrollToFirstStep\n          showProgress\n          showSkipButton\n          disableOverlayClose\n          styles={{\n            tooltip: {\n              borderRadius: 10,\n            },\n            tooltipContent: {\n              fontSize: 14,\n              textAlign: 'left',\n            },\n            buttonBack: {\n              color: 'black',\n              fontSize: 12,\n            },\n            buttonNext: {\n              background: '#6441a5',\n              fontSize: 12,\n              borderRadius: 5,\n            },\n            buttonSkip: {\n              color: '#6441a5',\n              fontSize: 12,\n              border: '1px solid #6441a5',\n              borderRadius: 5,\n            },\n          }}\n          locale={{\n            back: 'Back',\n            close: 'Close',\n            last: 'Got it!',\n            next: 'Next',\n            open: 'Open',\n            skip: 'Skip',\n          }}\n          beaconComponent={Beacon}\n          callback={this.callback}\n        />\n        <div\n          style={{\n            display: run ? 'block' : 'none',\n            position: 'absolute',\n            width: window.innerWidth * 0.75,\n            height: window.innerHeight * 0.5,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          id=\"tour-circuit-area-wrapper\"\n        />\n        <div\n          style={{\n            display: run ? 'block' : 'none',\n            position: 'absolute',\n            width: DIMENSIONS.width,\n            height: DIMENSIONS.height,\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n          }}\n          id=\"tour-circuit-wrapper\"\n        />\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Tooltip from 'react-tooltip';\n\nimport components, { groupedComponents } from '@logossim/components';\nimport {\n  SimulationEngine,\n  DiagramEngine,\n  Diagram,\n} from '@logossim/core';\n\nimport {\n  DiagramStateButtons,\n  SimulationControlButtons,\n  ComponentSelectButton,\n  ComponentSelect,\n  ComponentEdit,\n  ContextMenus,\n  Tour,\n  HelpKeyboardShortcuts,\n  HelpAbout,\n} from './ui-components';\nimport tourCircuit, {\n  DIMENSIONS,\n} from './ui-components/Tour/tourCircuit';\n\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isComponentSelectOpen: false,\n      isComponentEditOpen: false,\n      isHelpKeyboardOpen: false,\n      isHelpAboutOpen: false,\n      componentEdit: null,\n      isTourAvailable: false,\n      isTourRunning: !JSON.parse(localStorage.getItem('tour-done')),\n    };\n\n    this.diagram = new DiagramEngine(\n      components,\n      this.areShortcutsAllowed,\n    );\n    this.simulation = new SimulationEngine(components);\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.shortcutHandler);\n    window.addEventListener('load', this.loadHandler);\n    window.addEventListener('beforeunload', this.unloadHandler);\n\n    this.autoSaveInterval = setInterval(this.autoSave, 15000);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.shortcutHandler);\n    window.addEventListener('load', this.loadHandler);\n    window.removeEventListener('beforeunload', this.unloadHandler);\n\n    clearInterval(this.autoSaveInterval);\n  }\n\n  areShortcutsAllowed = () => {\n    const {\n      isComponentSelectOpen,\n      isComponentEditOpen,\n      isHelpKeyboardOpen,\n      isHelpAboutOpen,\n    } = this.state;\n\n    return !(\n      isComponentSelectOpen ||\n      isComponentEditOpen ||\n      isHelpKeyboardOpen ||\n      isHelpAboutOpen\n    );\n  };\n\n  shortcutHandler = event => {\n    const { ctrlKey, shiftKey, code } = event;\n\n    if (!this.areShortcutsAllowed()) return;\n\n    // Add component\n    if (ctrlKey && code === 'KeyA') {\n      event.preventDefault();\n      if (!this.simulation.isStopped()) return;\n\n      this.showAddComponent();\n    }\n\n    // Component configuration\n    if (ctrlKey && code === 'KeyE') {\n      event.preventDefault();\n      if (!this.simulation.isStopped()) return;\n\n      const selectedNodes = this.diagram.getSelectedNodes();\n      if (selectedNodes.length !== 1) return;\n      const node = selectedNodes[0];\n      this.showEditComponent(node);\n    }\n\n    // Play/pause toggle simulation\n    if (!ctrlKey && code === 'Space') {\n      event.preventDefault();\n      if (this.simulation.isRunning()) this.handleClickPause();\n      else this.handleClickStart();\n    }\n\n    // Stop simulation\n    if ((ctrlKey && code === 'Space') || code === 'Escape') {\n      event.preventDefault();\n\n      if (!this.simulation.isStopped()) this.handleClickStop();\n    }\n\n    // Save circuit\n    if (ctrlKey && !shiftKey && code === 'KeyS') {\n      event.preventDefault();\n      this.handleClickSave();\n    }\n\n    // Load circuit\n    if (\n      (ctrlKey && code === 'KeyL') ||\n      (ctrlKey && shiftKey && code === 'KeyS')\n    ) {\n      event.preventDefault();\n      this.handleClickLoad();\n    }\n  };\n\n  isCircuitEmpty = circuit => {\n    if (!circuit) return true;\n\n    return Object.keys(circuit.layers[1].models).length === 0;\n  };\n\n  loadHandler = () => {\n    const lastSaved = JSON.parse(\n      localStorage.getItem('circuit-autosave'),\n    );\n\n    if (this.isCircuitEmpty(lastSaved)) {\n      this.setState({ isTourAvailable: true });\n      return;\n    }\n\n    const reload = window.confirm('Reload last unsaved circuit?');\n    if (reload) {\n      this.diagram.load(lastSaved);\n    } else {\n      this.setState({ isTourAvailable: true });\n      localStorage.removeItem('circuit-autosave');\n    }\n  };\n\n  shouldWarnUnload = (currentCircuit, lastSavedCircuit) => {\n    if (this.isCircuitEmpty(currentCircuit)) return false;\n\n    return (\n      JSON.stringify(lastSavedCircuit.layers) !==\n      JSON.stringify(currentCircuit.layers)\n    );\n  };\n\n  unloadHandler = event => {\n    const lastSaved = JSON.parse(localStorage.getItem('circuit'));\n    const current = this.diagram.serialize();\n\n    if (this.shouldWarnUnload(current, lastSaved)) {\n      if (this.simulation.isStopped()) {\n        localStorage.setItem(\n          'circuit-autosave',\n          JSON.stringify(current),\n        );\n      }\n      // eslint-disable-next-line no-param-reassign\n      event.returnValue =\n        'You have unsaved changes. Sure you want to leave?';\n    }\n  };\n\n  autoSave = () => {\n    const circuit = this.diagram.serialize();\n\n    if (circuit.id === 'tour-circuit') return;\n    if (this.isCircuitEmpty(circuit)) return;\n    if (!this.simulation.isStopped()) return;\n\n    localStorage.setItem('circuit-autosave', JSON.stringify(circuit));\n  };\n\n  synchronizeSimulation = () => {\n    const diff = this.simulation.getDiff();\n\n    // Handles components diff\n    Object.entries(diff.components).forEach(([id, componentDiff]) =>\n      this.diagram.synchronizeComponent(id, componentDiff),\n    );\n\n    // Handles link value diff\n    Object.entries(diff.links).forEach(([id, value]) =>\n      this.diagram.synchronizeLink(id, value),\n    );\n\n    this.simulation.clearDiff();\n    this.diagram.repaint();\n  };\n\n  renderSimulation = () => {\n    if (!this.simulation.isRunning()) return;\n\n    this.synchronizeSimulation();\n\n    requestAnimationFrame(this.renderSimulation);\n  };\n\n  handleClickSave = () => {\n    const serialized = JSON.stringify(this.diagram.serialize());\n    localStorage.setItem('circuit', serialized);\n    console.log(JSON.parse(serialized));\n  };\n\n  handleClickLoad = () => {\n    const circuit = localStorage.getItem('circuit');\n    if (!circuit) {\n      window.alert('No circuit has been saved yet');\n      return;\n    }\n\n    this.diagram.load(JSON.parse(circuit));\n  };\n\n  handleClickStart = () => {\n    const serialized = JSON.stringify(this.diagram.serialize());\n    localStorage.setItem('circuit-autosave', serialized);\n\n    this.diagram.clearSelection();\n    this.diagram.setLocked(true);\n\n    this.simulation.start(this.diagram.getModel());\n    this.renderSimulation();\n    this.forceUpdate();\n  };\n\n  handleClickPause = () => {\n    this.simulation.pause();\n    this.forceUpdate();\n  };\n\n  handleClickStop = async () => {\n    await this.simulation.stop();\n    this.diagram.clearAllValues();\n    this.diagram.setLocked(false);\n    this.forceUpdate();\n    this.simulation.clearDiff();\n  };\n\n  showAddComponent = () =>\n    this.setState({\n      isComponentSelectOpen: true,\n    });\n\n  hideAddComponent = () =>\n    this.setState({\n      isComponentSelectOpen: false,\n    });\n\n  showEditComponent = componentEdit => {\n    this.diagram.clearSelection();\n\n    this.setState({\n      isComponentEditOpen: true,\n      componentEdit,\n    });\n  };\n\n  hideEditComponent = () =>\n    this.setState({\n      isComponentEditOpen: false,\n      componentEdit: null,\n    });\n\n  setTourRunning = isTourRunning => this.setState({ isTourRunning });\n\n  showHelpTour = () => this.setTourRunning(true);\n\n  showHelpKeyboard = () =>\n    this.setState({ isHelpKeyboardOpen: true });\n\n  hideHelpKeyboard = () =>\n    this.setState({ isHelpKeyboardOpen: false });\n\n  showHelpAbout = () => this.setState({ isHelpAboutOpen: true });\n\n  hideHelpAbout = () => this.setState({ isHelpAboutOpen: false });\n\n  handleLoadTourCircuit = () => {\n    this.circuitBeforeTour = this.diagram.serialize();\n    this.diagram.load(tourCircuit);\n    this.handleCenterTourCircuitOffset();\n  };\n\n  handleUnloadTourCircuit = () => {\n    if (!this.circuitBeforeTour) return;\n\n    this.diagram.load(this.circuitBeforeTour);\n    this.circuitBeforeTour = null;\n  };\n\n  handleCenterTourCircuitOffset = () => {\n    this.diagram\n      .getModel()\n      .setOffset(\n        (window.innerWidth - DIMENSIONS.width) / 2,\n        (window.innerHeight - DIMENSIONS.height) / 2,\n      );\n    this.diagram.realignGrid();\n    this.diagram.repaint();\n  };\n\n  render() {\n    const {\n      isComponentSelectOpen,\n      isComponentEditOpen,\n      isHelpKeyboardOpen,\n      isHelpAboutOpen,\n      componentEdit,\n      isTourAvailable,\n      isTourRunning,\n    } = this.state;\n\n    return (\n      <>\n        <DiagramStateButtons\n          handleClickSave={this.handleClickSave}\n          handleClickLoad={this.handleClickLoad}\n          handleClickKeyboardShortcuts={this.showHelpKeyboard}\n          handleClickRedoTour={this.showHelpTour}\n          handleClickAbout={this.showHelpAbout}\n          disabled={!this.simulation.isStopped()}\n        />\n        <SimulationControlButtons\n          state={this.simulation.getState()}\n          handleClickStart={this.handleClickStart}\n          handleClickPause={this.handleClickPause}\n          handleClickStop={this.handleClickStop}\n        />\n        <ComponentSelectButton\n          handleClick={this.showAddComponent}\n          disabled={!this.simulation.isStopped()}\n        />\n\n        <ComponentSelect\n          isOpen={isComponentSelectOpen}\n          groups={groupedComponents}\n          handleClose={this.hideAddComponent}\n          handleComponentDrop={this.diagram.handleComponentDrop}\n        />\n        <ComponentEdit\n          isOpen={isComponentEditOpen}\n          components={components}\n          component={componentEdit}\n          handleClose={this.hideEditComponent}\n          handleComponentEdit={this.diagram.handleComponentEdit}\n        />\n\n        <HelpKeyboardShortcuts\n          isOpen={isHelpKeyboardOpen}\n          handleClose={this.hideHelpKeyboard}\n        />\n        <HelpAbout\n          isOpen={isHelpAboutOpen}\n          handleClose={this.hideHelpAbout}\n        />\n        {isTourAvailable && (\n          <Tour\n            run={isTourRunning}\n            setTourRunning={this.setTourRunning}\n            loadCircuit={this.handleLoadTourCircuit}\n            clearCircuit={this.handleUnloadTourCircuit}\n            recenterCircuit={this.handleCenterTourCircuitOffset}\n          />\n        )}\n\n        <Diagram engine={this.diagram} />\n\n        <ContextMenus\n          duplicateSelected={this.diagram.duplicateSelected}\n          cutSelected={this.diagram.cutSelected}\n          copySelected={this.diagram.copySelected}\n          pasteSelected={this.diagram.pasteSelected}\n          deleteSelected={this.diagram.deleteSelected}\n          undo={this.diagram.undo}\n          redo={this.diagram.redo}\n          zoomIn={this.diagram.zoomIn}\n          zoomOut={this.diagram.zoomOut}\n          configureComponent={this.showEditComponent}\n        />\n\n        <Tooltip id=\"tooltip\" globalEventOff=\"click\" />\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\n        'Error during service worker registration:',\n        error,\n      );\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}